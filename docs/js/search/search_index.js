var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/Alerts.html",[0,0.8,1,1.411]],["body/injectables/Alerts.html",[0,0.893,1,1.576,2,1.062,3,0.22,4,0.191,5,0.163,6,2,7,0.554,8,0.969,9,4.229,10,4.229,11,4.229,12,4.229,13,4.229,14,4.654,15,0.969,16,2.391,17,5.234,18,5.418,19,5.418,20,1.479,21,3.547,22,1.479,23,0.032,24,1.364,25,0.822,26,0.708,27,1.364,28,1.364,29,2.391,30,2.967,31,2.078,32,2.391,33,1.712,34,2.73,35,2.299,36,5.94,37,1.784,38,4.054,39,4.678,40,3.748,41,4.139,42,5.564,43,4.377,44,5.234,45,3.813,46,5.234,47,3.813,48,5.234,49,4.678,50,4.996,51,2.391,52,3.547,53,1.881,54,3.547,55,3.547,56,2.391,57,2.967,58,3.547,59,3.547,60,2.391,61,0.327,62,0.191,63,0.554,64,1.158,65,1.062,66,0.22,67,0.22,68,1.252,69,3.318,70,3.802,71,5.234,72,1.603,73,1.252,74,1.881,75,3.547,76,3.081,77,2.73,78,3.408,79,3.547,80,3.547,81,1.742,82,2.391,83,2.391,84,2.391,85,2.391,86,2.391,87,2.391,88,2.391,89,2.391,90,2.391,91,2.391,92,2.391,93,2.391,94,1.742,95,2.391,96,1.742,97,2.391,98,1.742,99,2,100,2.391,101,2,102,2.391,103,2.391,104,0.017,105,0.017]],["title/components/AppComponent.html",[106,0.62,107,1.104]],["body/components/AppComponent.html",[1,2.258,3,0.263,4,0.228,5,0.194,7,0.662,8,1.102,15,1.102,20,1.52,22,0.846,23,0.032,24,1.278,25,1.084,26,1.385,30,3.376,31,1.793,33,1.195,35,1.852,41,2.616,45,2.941,61,0.527,62,0.322,63,0.662,65,2.078,66,0.263,67,0.263,68,1.693,72,1.505,74,0.916,104,0.019,105,0.019,106,1.046,107,1.766,108,1.793,109,1.384,110,1.384,111,1.384,112,1.384,113,2.391,114,1.955,115,2.266,116,1.384,117,2.877,118,2.488,119,1.955,120,4.679,121,1.955,122,4.036,123,4.679,124,4.679,125,1.955,126,5.084,127,5.084,128,2.462,129,2.391,130,3.248,131,2.541,132,2.731,133,5.72,134,4.036,135,2.858,136,4.036,137,4.036,138,3.409,139,1.912,140,4.036,141,4.679,142,4.036,143,3.376,144,3.376,145,1.5,146,1.955,147,2.858,148,2.858,149,2.14,150,2.14,151,2.14,152,2.14,153,2.858,154,4.679,155,2.858,156,4.036,157,3.376,158,2.858,159,4.036,160,2.858,161,2.082,162,2.858,163,1.384,164,1.384,165,1.27,166,2.858,167,2.858,168,2.858,169,2.858,170,2.858,171,2.858,172,2.858,173,2.858,174,2.858,175,2.858,176,2.858,177,2.858,178,4.036,179,2.082,180,2.858,181,2.858,182,2.858,183,2.082,184,2.858,185,2.858,186,0.846,187,1.955,188,1.955,189,1.384,190,2.462,191,1.384,192,1.384,193,0.916,194,1.168,195,2.266,196,0.916,197,1.016,198,1.955,199,0.916,200,0.916,201,1.402,202,0.916,203,0.916,204,1.27,205,1.384,206,1.384]],["title/modules/AppModule.html",[207,0.676,208,2.059]],["body/modules/AppModule.html",[3,0.355,4,0.307,5,0.261,23,0.032,61,0.582,62,0.307,63,0.891,66,0.355,67,0.355,104,0.023,105,0.023,107,2.238,118,1.571,163,1.863,186,1.138,207,1.158,208,4.196,209,1.05,210,1.708,211,2.417,212,2.885,213,2.614,214,1.448,215,3.217,216,3.217,217,3.217,218,3.217,219,3.544,220,3.544,221,3.544,222,2.614,223,2.039,224,2.039,225,3.846,226,1.713,227,3.592,228,3.964,229,1.713,230,4.93,231,3.217,232,1.708,233,4.93,234,2.492,235,4.93,236,3.846,237,3.846,238,3.846,239,3.846,240,3.592,241,2.492,242,2.245,243,2.802,244,3.846,245,3.846,246,3.217,247,3.846,248,3.846]],["title/modules/AppRoutingModule.html",[207,0.676,219,1.855]],["body/modules/AppRoutingModule.html",[3,0.417,4,0.361,5,0.307,23,0.032,61,0.503,62,0.361,66,0.417,67,0.417,73,1.338,104,0.026,105,0.026,163,2.19,209,1.235,214,1.702,219,3.183,226,1.571,229,1.894,249,4.522,250,4.522,251,5.452,252,3.533,253,3.104,254,3.183,255,3.782,256,4.522,257,3.782,258,3.782,259,4.522,260,4.522,261,4.522,262,4.522,263,4.522,264,4.522,265,4.522]],["title/injectables/Categories.html",[0,0.8,266,1.104]],["body/injectables/Categories.html",[0,0.875,2,1.034,3,0.215,4,0.186,5,0.158,7,0.54,8,0.95,15,0.95,20,1.349,22,1.367,23,0.032,24,1.261,25,0.54,26,0.689,27,1.261,28,1.261,33,1.59,37,1.722,53,1.844,61,0.384,62,0.186,63,0.54,64,1.128,65,1.034,66,0.215,67,0.215,68,1.029,69,2.03,72,1.232,73,1.534,74,1.48,104,0.017,105,0.017,130,3.135,131,2.051,139,2.194,145,1.335,197,0.586,232,2.507,266,1.96,267,1.948,268,3.481,269,2.697,270,3.478,271,4.163,272,1.697,273,2.329,274,1.684,275,2.329,276,3.478,277,3.135,278,2.194,279,2.022,280,2.194,281,2.194,282,2.601,283,3.48,284,2.194,285,3.092,286,2.591,287,3.092,288,2.074,289,2.909,290,2.329,291,2.03,292,2.43,293,3.202,294,2.329,295,2.329,296,2.163,297,2.016,298,3.861,299,3.364,300,2.329,301,2.909,302,1.235,303,2.748,304,2.329,305,1.509,306,2.695,307,2.448,308,2.695,309,3.135,310,1.697,311,2.448,312,2.992,313,2.992,314,2.992,315,1.697,316,1.697,317,1.335,318,1.948,319,1.509,320,3.364,321,2.884,322,4.163,323,1.948,324,1.948,325,1.948,326,1.684,327,1.948,328,4.163,329,3.481,330,1.948,331,1.948,332,2.909,333,1.948,334,1.948,335,2.909,336,1.948,337,1.948,338,1.128,339,1.948,340,2.909,341,2.329,342,1.948,343,1.948,344,1.948,345,2.329]],["title/modules/CategoriesModule.html",[207,0.676,346,1.855]],["body/modules/CategoriesModule.html",[3,0.383,4,0.332,5,0.282,23,0.032,61,0.579,62,0.332,63,0.962,66,0.383,67,0.383,104,0.025,105,0.025,186,1.229,196,1.985,197,1.045,200,1.985,201,1.442,207,1.101,209,1.134,210,1.845,211,2.504,212,2.202,213,2.202,214,1.563,222,2.744,223,2.202,224,2.202,226,1.798,229,1.798,234,3.353,266,1.442,346,3.762,347,3.473,348,3.473,349,3.473,350,3.614,351,3.473,352,1.697,353,2.744,354,2.011,355,2.202,356,2.424,357,3.353,358,2.424,359,3.77,360,2.691]],["title/modules/CategoriesRoutingModule.html",[207,0.676,350,1.855]],["body/modules/CategoriesRoutingModule.html",[3,0.417,4,0.361,5,0.307,23,0.032,61,0.56,62,0.361,66,0.417,67,0.417,73,1.338,104,0.026,105,0.026,106,1.063,163,2.19,196,1.748,197,1.372,200,1.748,201,1.894,209,1.235,214,1.702,226,1.571,229,1.894,252,3.533,253,3.104,254,3.183,350,3.183,351,3.782,352,1.847,355,2.397,356,2.639,357,3.533,358,2.639,361,3.294]],["title/modules/ComponentsModule.html",[207,0.676,362,2.315]],["body/modules/ComponentsModule.html",[3,0.447,4,0.387,5,0.33,23,0.032,61,0.524,62,0.387,66,0.447,67,0.447,104,0.027,105,0.027,209,1.324,211,2.154,226,1.685,229,1.974,352,1.982,353,3.014,354,2.349,362,4.141,363,4.85]],["title/injectables/Connection.html",[0,0.8,131,1.411]],["body/injectables/Connection.html",[0,1.193,2,1.607,3,0.334,4,0.289,5,0.246,7,0.838,8,1.294,15,1.294,20,1.531,22,1.071,23,0.032,24,0.988,25,1.224,26,1.071,27,1.443,28,1.443,33,1.403,61,0.537,62,0.289,63,0.838,64,1.752,65,1.607,66,0.334,67,0.334,68,1.564,72,1.071,74,1.519,104,0.022,105,0.022,129,3.026,130,3.486,131,2.491,232,2.105,241,2.345,242,2.112,243,2.636,274,2.716,278,1.936,279,1.784,280,1.936,281,2.44,284,2.291,285,2.802,286,2.347,287,2.802,303,1.918,311,1.918,312,2.345,313,2.345,314,2.345,364,3.026,365,5.285,366,4.085,367,5.285,368,5.285,369,5.285,370,3.634,371,4.739,372,3.618,373,3.963,374,4.868,375,3.634,376,5.608,377,3.618,378,3.618,379,3.618,380,3.618,381,3.618,382,3.618]],["title/injectables/ConnectionDb.html",[0,0.8,274,1.539]],["body/injectables/ConnectionDb.html",[0,1.095,1,2.365,2,1.413,3,0.293,4,0.254,5,0.216,7,0.737,8,1.187,15,1.187,20,1.187,22,0.942,23,0.032,24,1.187,25,0.737,26,0.942,27,1.187,28,0.869,33,1.287,34,2.538,37,1.787,61,0.457,62,0.254,64,1.541,65,1.413,66,0.293,67,0.293,68,1.287,72,0.942,73,1.287,74,1.889,77,3.108,104,0.021,105,0.021,131,1.413,132,2.892,139,1.3,145,1.02,157,2.661,161,2.318,240,4.193,241,2.062,242,1.857,243,2.318,266,1.105,274,2.106,278,2.024,279,2.099,283,2.062,284,1.777,285,2.305,286,1.932,288,1.936,296,1.198,297,1.541,302,2.626,303,2.305,306,1.857,307,1.687,308,1.857,309,1.857,317,1.02,319,3.818,326,1.541,366,2.318,374,2.661,383,2.661,384,4.954,385,3.182,386,3.182,387,3.182,388,4.349,389,4.349,390,4.927,391,4.349,392,4.143,393,2.818,394,3.051,395,3.637,396,3.182,397,3.182,398,3.182,399,3.182,400,4.954,401,4.143,402,4.954,403,5.575,404,3.609,405,4.954,406,1.198,407,2.062,408,2.062,409,2.062,410,3.182,411,3.182,412,3.182,413,3.182,414,2.661,415,2.661,416,2.661,417,2.318,418,2.318,419,3.182,420,4.349,421,2.661,422,1.857,423,2.318,424,2.661,425,3.637,426,3.168,427,4.143,428,3.637,429,3.168]],["title/injectables/ConnectionSstorage.html",[0,0.8,370,2.059]],["body/injectables/ConnectionSstorage.html",[0,1.178,1,2.473,2,1.578,3,0.327,4,0.284,5,0.241,7,0.823,8,1.278,15,1.278,20,1.278,22,1.051,23,0.032,24,0.97,25,0.823,26,1.051,27,0.97,28,0.97,33,1.386,34,2.073,37,1.501,61,0.432,62,0.284,64,1.72,65,1.578,66,0.327,67,0.327,68,1.051,72,1.051,73,1.386,104,0.022,105,0.022,132,2.733,139,1.451,145,1.139,161,2.588,232,2.08,279,1.337,280,2.14,281,2.275,284,1.913,287,2.482,288,1.626,293,2.302,296,1.337,302,2.777,303,2.482,306,2.073,307,1.883,308,2.073,309,2.073,311,1.883,319,3.749,326,1.72,366,2.588,370,3.034,373,3.916,375,3.394,390,4.656,392,2.971,393,3.034,394,1.883,395,2.971,415,2.971,416,2.971,417,2.588,418,2.588,421,2.971,422,2.073,423,2.588,424,2.971,425,2.971,426,2.588,427,2.971,428,2.971,429,2.588,430,2.971,431,5.237,432,2.588,433,3.552,434,3.552,435,4.682,436,4.682,437,4.682,438,3.552,439,3.552,440,3.552,441,3.552,442,3.552,443,3.552,444,3.552,445,3.552,446,3.552,447,3.552,448,3.552,449,4.682,450,3.552,451,3.552,452,3.552]],["title/modules/CoreModule.html",[207,0.676,220,1.855]],["body/modules/CoreModule.html",[3,0.447,4,0.387,5,0.33,23,0.032,61,0.524,62,0.387,66,0.447,67,0.447,104,0.027,105,0.027,209,1.324,211,2.154,220,3.318,226,1.685,229,1.974,352,1.982,353,3.014,354,2.349,453,4.85]],["title/components/FinishTaskComponent.html",[106,0.62,193,1.019]],["body/components/FinishTaskComponent.html",[3,0.268,4,0.232,5,0.198,7,0.674,15,1.116,20,1.474,22,0.861,23,0.032,24,1.29,25,0.947,26,0.861,27,0.794,28,0.794,31,1.815,33,1.516,37,1.515,61,0.435,62,0.232,63,0.674,66,0.268,67,0.268,68,1.209,70,3.32,72,1.398,74,0.933,104,0.019,105,0.019,106,1.121,107,1.01,108,1.815,109,1.409,110,1.409,111,1.409,112,1.409,114,1.979,115,2.288,116,1.409,117,2.889,118,2.437,119,1.979,121,1.979,125,1.979,128,2.481,139,1.67,145,1.515,146,1.979,149,2.167,150,2.167,151,2.167,152,2.167,164,1.409,165,1.292,186,0.861,187,1.979,188,1.979,189,1.409,190,2.481,191,1.409,192,1.409,193,1.643,194,2.469,195,2.288,196,0.933,197,1.029,198,1.979,199,0.933,200,0.933,201,1.78,202,0.933,203,0.933,204,1.292,205,1.409,206,1.409,278,1.67,279,1.539,280,1.67,281,1.67,282,1.979,284,1.67,288,1.641,296,2.032,317,1.31,320,2.977,338,1.979,406,1.929,407,3.061,408,3.061,409,3.061,422,2.757,454,4.681,455,3.267,456,1.885,457,3.32,458,3.441,459,2.977,460,3.32,461,4.285,462,2.977,463,2.119,464,3.267,465,3.441,466,2.433,467,3.441,468,2.909,469,2.909,470,2.648,471,2.909,472,2.909,473,2.977,474,2.977,475,2.977,476,2.119,477,1.885,478,2.909,479,2.433,480,2.119,481,4.087]],["title/components/ListCategoryComponent.html",[106,0.62,196,1.019]],["body/components/ListCategoryComponent.html",[1,1.869,3,0.179,4,0.155,5,0.132,7,0.451,8,0.828,15,0.828,20,1.549,22,1.43,23,0.032,24,1.425,25,1.242,26,1.43,27,1.319,28,1.319,31,2.318,33,1.721,34,1.771,35,2.415,37,1.195,38,1.418,40,2.727,41,1.966,47,2.21,53,1.608,61,0.42,62,0.155,63,0.451,66,0.179,67,0.28,68,1.245,69,1.136,72,1.769,73,1.245,74,1.757,76,1.418,77,1.771,78,2.21,81,1.418,98,2.21,104,0.014,105,0.014,106,1.146,107,0.676,108,1.348,109,0.943,110,0.943,111,0.943,112,0.943,114,1.469,115,1.805,116,0.943,117,2.596,118,2.19,119,1.469,121,1.469,125,1.469,128,2.038,132,1.771,138,1.418,145,1.673,146,1.805,149,1.976,150,1.608,151,1.608,152,1.608,164,0.943,165,0.865,183,1.418,186,0.576,187,1.469,188,1.469,189,0.943,190,2.038,191,0.943,192,0.943,193,0.624,194,0.795,195,1.805,196,1.349,197,1.447,198,1.469,199,0.624,200,1.349,201,1.295,202,0.624,203,0.624,204,0.865,205,0.943,206,0.943,266,2.02,268,2.537,269,1.966,277,3.395,286,0.865,288,1.584,291,2.82,292,1.771,296,1.899,297,0.943,305,2.415,317,1.349,321,1.771,338,2.34,356,3.355,357,1.262,358,1.136,375,1.966,432,1.418,460,2.727,464,2.945,470,1.966,477,1.262,482,4.808,483,1.418,484,3.117,485,2.537,486,3.034,487,3.034,488,3.519,489,3.034,490,2.21,491,3.034,492,4.219,493,2.415,494,1.947,495,3.034,496,1.947,497,2.537,498,1.947,499,2.21,500,2.537,501,2.537,502,1.947,503,3.034,504,1.947,505,2.537,506,3.519,507,1.966,508,2.537,509,3.034,510,1.947,511,3.034,512,3.034,513,1.947,514,1.947,515,3.034,516,1.947,517,2.537,518,2.21,519,2.537,520,1.628,521,1.628,522,1.947,523,1.628,524,1.262,525,1.418,526,1.947,527,1.628,528,1.628,529,1.628,530,1.628,531,3.034,532,1.947,533,1.947,534,2.21,535,1.628,536,1.947,537,1.628,538,1.947,539,3.066,540,2.537,541,2.537,542,1.966,543,2.537,544,2.537,545,1.262,546,1.947,547,3.727,548,1.947,549,1.947,550,2.715,551,1.418,552,1.628,553,1.628,554,1.418,555,1.628,556,1.628,557,2.21]],["title/components/ListTaskComponent.html",[106,0.62,199,1.019]],["body/components/ListTaskComponent.html",[1,1.47,3,0.119,4,0.103,5,0.088,7,0.505,8,0.595,14,1.823,15,0.595,20,1.496,22,1.259,23,0.032,24,1.269,25,1.195,26,1.259,27,1.269,28,1.409,31,2.064,33,1.64,34,1.272,35,1.828,37,1.432,40,2.592,41,1.412,45,1.588,47,1.588,53,1.156,57,2.36,61,0.412,62,0.103,63,0.3,66,0.119,67,0.201,68,1.184,69,2.483,72,1.777,73,1.259,74,1.654,76,1.588,77,1.272,78,1.588,81,0.944,94,2.056,96,1.588,98,1.588,101,1.083,104,0.01,105,0.01,106,1.081,107,0.45,108,0.968,109,0.627,110,0.627,111,0.627,112,0.627,114,1.056,115,1.367,116,0.627,117,2.25,118,1.898,119,1.056,121,1.056,125,1.056,128,1.602,132,1.272,138,0.944,145,1.539,146,0.627,149,2.367,150,1.156,151,1.156,152,1.156,164,0.627,165,0.575,179,3.942,183,0.944,186,0.383,187,1.056,188,1.056,189,0.627,190,1.788,191,0.627,192,0.627,193,0.905,194,1.153,195,1.367,196,0.905,197,1.434,198,1.056,199,1.061,200,0.415,201,0.98,202,0.905,203,0.415,204,0.575,205,0.627,206,0.627,266,1.389,269,1.412,277,2.607,282,1.602,286,0.575,288,1.149,291,2.607,292,1.931,296,2.279,297,2.25,305,2.894,311,0.687,317,1.684,321,1.647,326,0.627,338,2.325,356,0.756,357,0.839,375,2.144,393,1.412,404,0.944,406,2.128,414,1.083,417,1.588,422,1.272,423,0.944,432,0.944,455,0.756,456,0.839,457,3.404,458,2.056,459,1.588,464,2.483,465,2.056,466,1.083,476,0.944,488,1.823,490,2.411,492,3.557,493,1.828,497,1.823,499,2.411,500,3.735,501,2.767,505,1.823,506,2.767,507,2.592,508,1.823,517,1.823,518,2.914,519,1.823,523,1.083,524,0.839,525,0.944,527,1.083,528,1.083,529,1.083,530,1.083,534,1.588,535,1.083,537,1.083,539,1.588,540,2.36,541,2.36,542,1.412,543,2.36,544,2.36,545,1.412,550,0.944,551,0.944,552,1.823,553,1.823,554,2.914,555,1.083,556,1.083,557,2.411,558,4.635,559,3.591,560,2.18,561,2.18,562,2.18,563,1.823,564,2.18,565,2.18,566,3.309,567,1.823,568,2.18,569,2.18,570,2.18,571,2.18,572,3.309,573,2.822,574,3.309,575,1.295,576,1.295,577,2.18,578,1.295,579,3.309,580,3.309,581,3.385,582,3.309,583,2.767,584,3.886,585,3.886,586,4.015,587,3.498,588,4.253,589,4,590,4,591,4,592,3.691,593,3.309,594,2.18,595,1.295,596,2.18,597,1.295,598,2.18,599,1.295,600,1.823,601,2.18,602,2.36,603,1.295,604,1.823,605,2.18,606,2.18,607,2.767,608,1.588,609,1.823,610,1.295,611,1.295,612,2.18,613,2.18,614,2.18,615,1.295,616,2.18,617,1.295,618,1.295,619,1.295,620,2.18,621,1.295,622,1.295,623,1.295,624,1.295,625,1.295,626,1.295,627,1.295,628,1.295,629,1.295,630,0.756,631,1.588,632,1.295,633,1.295,634,1.295,635,1.295,636,1.295,637,3.691,638,1.295,639,1.295,640,1.295,641,2.18,642,1.295,643,1.295,644,1.295,645,1.295,646,3.309,647,3.309,648,2.18,649,2.18,650,1.295,651,2.18,652,1.083,653,1.295,654,1.295,655,1.295,656,1.295,657,1.295,658,1.295,659,1.823,660,2.18,661,2.056,662,1.823,663,2.18,664,2.18,665,1.083,666,1.295,667,1.295,668,1.083,669,1.295,670,1.295,671,1.295,672,1.295,673,1.295,674,1.295,675,1.295,676,1.295,677,1.295,678,1.083,679,1.295,680,1.295,681,1.295,682,1.083,683,1.295,684,1.295,685,1.295,686,2.18,687,1.295,688,1.295,689,1.295,690,1.295,691,1.083,692,1.295]],["title/modules/PagesModule.html",[207,0.676,693,1.855]],["body/modules/PagesModule.html",[3,0.371,4,0.322,5,0.274,23,0.032,61,0.582,62,0.322,63,0.933,66,0.371,67,0.371,104,0.024,105,0.024,143,3.368,186,1.192,203,1.97,207,1.242,209,1.1,210,1.789,211,2.47,212,2.135,213,2.135,214,1.516,222,2.692,223,2.135,224,2.135,226,1.763,227,3.699,228,4.05,229,1.763,234,3.29,346,3.586,352,1.645,353,2.692,354,1.95,355,2.135,359,3.699,360,2.61,693,3.785,694,3.368,695,3.368,696,3.368,697,3.586,698,3.586,699,3.368,700,3.368,701,4.027,702,4.027]],["title/modules/PagesRoutingModule.html",[207,0.676,697,1.855]],["body/modules/PagesRoutingModule.html",[3,0.409,4,0.354,5,0.302,23,0.032,61,0.535,62,0.354,66,0.409,67,0.409,73,1.313,104,0.026,105,0.026,106,0.865,163,2.149,203,1.728,204,1.971,209,1.212,214,1.671,226,1.541,229,1.872,252,3.493,253,3.078,254,3.389,255,4.508,257,4.508,258,4.508,266,1.541,352,1.813,355,2.352,361,3.232,406,1.671,697,3.146,699,3.711,700,3.711,703,4.437,704,4.437,705,4.437,706,4.437]],["title/components/SaveCategoryComponent.html",[106,0.62,200,1.019]],["body/components/SaveCategoryComponent.html",[3,0.274,4,0.237,5,0.202,7,0.688,15,1.132,20,1.538,22,0.879,23,0.032,24,1.304,25,1.107,26,0.879,27,1.132,28,1.132,31,1.842,33,1.53,37,1.532,61,0.44,62,0.237,63,0.688,66,0.274,67,0.274,68,1.227,70,2.687,72,1.414,74,1.329,104,0.02,105,0.02,106,1.128,107,1.031,108,1.842,109,1.438,110,1.438,111,1.438,112,1.438,114,2.008,115,2.313,116,1.438,117,2.902,118,2.448,119,2.008,121,2.008,125,2.008,128,2.504,139,1.694,145,1.532,146,2.008,149,2.198,150,2.198,151,2.198,152,2.198,164,1.438,165,1.319,186,0.879,187,2.008,188,2.008,189,1.438,190,2.504,191,1.438,192,1.438,193,0.952,194,1.213,195,2.313,196,0.952,197,1.044,198,2.008,199,0.952,200,1.658,201,2.131,202,0.952,203,0.952,204,1.319,205,1.438,206,1.438,266,1.796,277,3.018,278,1.694,279,1.561,280,1.694,281,1.694,282,2.008,284,1.694,288,1.659,296,2.048,317,1.329,338,1.438,358,3.375,460,3.35,462,3.02,463,2.163,464,3.288,470,2.687,473,3.02,474,3.02,475,3.48,477,1.924,480,2.163,483,2.163,484,3.995,485,3.467,493,3.095,520,2.484,521,2.484,524,1.924,542,3.095,545,3.095,707,4.836,708,5.17,709,2.97,710,2.97,711,2.97,712,2.97,713,2.484,714,2.97,715,2.97]],["title/components/SaveTaskComponent.html",[106,0.62,202,1.019]],["body/components/SaveTaskComponent.html",[3,0.241,4,0.209,5,0.178,7,0.605,8,1.034,15,1.034,20,1.558,22,0.774,23,0.032,24,1.216,25,1.131,26,0.774,27,1.216,28,1.216,31,1.682,33,1.599,37,1.427,61,0.45,62,0.209,63,0.605,66,0.241,67,0.241,68,1.318,70,3.357,72,1.599,73,0.774,74,1.427,104,0.018,105,0.018,106,1.086,107,0.908,108,1.682,109,1.266,110,1.266,111,1.266,112,1.266,114,1.834,115,2.156,116,1.266,117,2.816,118,2.376,119,1.834,121,1.834,125,1.834,128,2.364,139,1.547,145,1.565,146,1.834,149,2.007,150,2.007,151,2.007,152,2.007,164,1.266,165,1.161,186,0.774,187,1.834,188,1.834,189,1.266,190,2.364,191,1.266,192,1.266,193,0.838,194,1.068,195,2.156,196,0.838,197,0.953,198,1.834,199,0.838,200,0.838,201,2.078,202,1.565,203,0.838,204,1.161,205,1.266,206,1.266,266,1.876,269,2.453,277,2.21,278,1.547,279,1.425,280,1.547,281,1.547,282,1.834,284,1.547,288,1.546,291,2.21,296,1.95,317,1.214,321,2.21,326,1.834,338,1.834,406,1.838,407,2.885,408,2.885,409,2.885,456,1.694,457,3.163,458,3.243,459,2.758,460,3.163,461,4.082,462,2.758,463,1.904,464,3.153,465,3.243,467,3.243,470,2.453,473,2.758,474,2.758,475,3.243,476,1.904,477,1.694,479,2.186,480,1.904,490,3.556,493,2.885,524,1.694,525,1.904,539,1.904,542,2.885,545,2.885,550,1.904,551,1.904,557,2.758,630,3.394,659,3.166,713,2.186,716,4.863,717,2.614,718,2.614,719,2.614,720,2.614,721,2.614,722,2.614,723,2.614,724,2.614,725,2.614]],["title/modules/SharedModule.html",[207,0.676,221,1.855]],["body/modules/SharedModule.html",[3,0.414,4,0.359,5,0.305,23,0.031,61,0.538,62,0.359,66,0.414,67,0.414,104,0.026,105,0.026,186,1.33,207,1.156,209,1.227,210,1.996,211,2.413,212,2.382,213,2.382,214,1.692,221,3.683,222,2.88,223,2.382,224,2.382,226,1.887,227,3.957,228,4.253,229,1.887,352,1.836,353,2.88,354,2.176,693,3.683,726,4.493,727,4.493,728,4.493,729,4.493]],["title/injectables/States.html",[0,0.8,394,1.685]],["body/injectables/States.html",[0,1.234,2,1.693,3,0.351,4,0.304,5,0.259,7,0.883,8,1.339,15,1.339,20,1.339,22,1.128,23,0.032,24,1.041,25,0.883,26,1.128,27,1.041,28,1.041,33,1.451,37,1.222,61,0.499,62,0.304,63,0.883,64,1.846,65,1.693,66,0.351,67,0.351,68,1.451,72,1.128,73,1.128,74,1.222,104,0.023,105,0.023,130,3.596,131,2.541,139,2.003,145,1.222,197,0.959,232,2.178,272,2.777,274,2.374,278,2.003,279,1.846,280,2.003,281,2.003,282,2.374,283,3.176,284,2.003,285,2.873,286,2.407,287,2.873,288,1.324,292,2.225,293,3.176,296,1.435,302,2.021,303,2.599,306,2.225,307,2.021,308,2.225,309,2.225,310,2.777,311,2.021,312,2.47,313,2.47,314,2.47,315,2.777,316,2.777,317,1.572,394,3.211,600,4.1,730,3.188,731,5.419,732,3.812,733,3.812]],["title/injectables/Tasks.html",[0,0.8,406,1.196]],["body/injectables/Tasks.html",[0,0.726,2,0.811,3,0.168,4,0.146,5,0.124,7,0.423,8,0.788,15,0.788,20,1.208,22,1.309,23,0.032,24,1.208,25,0.423,26,0.54,27,1.109,28,1.394,33,1.511,37,1.418,43,2.412,53,1.895,61,0.33,62,0.146,63,0.423,64,0.884,65,0.811,66,0.168,67,0.168,68,0.854,69,2.745,72,1.202,73,1.392,74,1.302,104,0.014,105,0.014,130,2.874,131,1.804,139,2.085,145,1.302,197,0.459,232,2.39,266,0.634,272,1.33,274,1.397,278,2.085,279,1.922,280,2.085,281,2.085,282,2.472,283,3.307,284,2.085,285,2.959,286,2.479,287,2.959,288,1.906,289,2.412,291,1.683,292,2.087,293,3.047,296,2.271,297,2.385,298,4.269,299,3.222,301,2.412,302,0.968,303,2.706,305,3.191,306,2.371,307,2.154,308,2.371,309,2.874,310,1.33,311,2.154,312,2.632,313,2.632,314,2.632,315,1.33,316,1.33,317,1.685,318,1.527,319,1.183,320,1.33,321,3.067,323,1.527,324,1.527,325,1.527,326,1.397,327,1.527,329,2.99,330,1.527,331,1.527,332,2.412,333,2.412,334,1.527,335,2.99,336,1.527,337,1.527,338,1.397,339,1.527,340,1.527,342,2.99,343,2.412,344,2.99,393,1.869,394,0.968,406,1.978,407,1.869,408,1.183,409,1.869,418,2.101,457,3.307,467,1.33,507,1.183,518,2.101,534,2.101,554,3.426,563,2.99,567,2.99,581,2.101,587,2.101,602,3.397,607,3.397,608,2.101,609,2.412,652,1.527,734,1.527,735,3.575,736,3.575,737,1.826,738,1.826,739,1.826,740,4.702,741,1.826,742,2.884,743,1.826,744,1.826,745,1.826,746,2.884,747,4.062,748,1.826,749,1.527,750,1.826,751,1.826,752,3.575,753,1.826,754,1.826,755,1.826,756,1.826,757,1.826,758,1.826,759,1.826,760,1.826,761,1.826,762,1.826,763,1.826,764,2.884,765,1.826,766,2.884,767,1.826,768,2.884,769,2.884,770,1.826,771,1.826,772,2.884,773,4.062,774,2.884,775,1.826,776,1.826,777,1.826,778,1.826,779,1.826,780,1.826,781,1.826,782,1.826,783,3.575,784,3.575,785,1.826,786,1.826]],["title/modules/TasksModule.html",[207,0.676,698,1.855]],["body/modules/TasksModule.html",[3,0.372,4,0.322,5,0.274,23,0.032,61,0.582,62,0.322,63,0.935,66,0.372,67,0.372,104,0.024,105,0.024,186,1.194,193,1.971,194,1.649,197,1.016,199,1.971,201,1.402,202,1.971,207,1.082,209,1.102,210,1.792,211,2.472,212,2.139,213,2.139,214,1.519,222,2.695,223,2.139,224,2.139,226,1.765,229,1.765,234,3.294,352,1.649,353,2.695,354,1.954,355,2.139,359,3.703,360,2.615,406,1.519,455,2.355,559,2.615,630,2.355,631,4.054,698,3.786,787,3.375,788,3.375,789,3.375,790,3.588,791,3.375]],["title/modules/TasksRoutingModule.html",[207,0.676,790,1.855]],["body/modules/TasksRoutingModule.html",[3,0.406,4,0.351,5,0.299,23,0.032,61,0.569,62,0.351,66,0.406,67,0.406,73,1.302,104,0.025,105,0.025,106,1.128,163,2.131,193,1.72,194,2.191,197,1.35,199,1.72,201,1.863,202,1.72,209,1.202,214,1.657,226,1.528,229,1.863,252,3.475,253,3.067,254,3.377,352,1.798,355,2.333,361,3.206,455,2.569,559,2.851,630,2.569,631,4.215,790,3.131,791,3.68]],["title/components/TutorialComponent.html",[106,0.62,203,1.019]],["body/components/TutorialComponent.html",[3,0.286,4,0.248,5,0.211,7,0.72,8,1.168,15,1.336,20,1.336,23,0.031,24,1.168,25,0.72,27,0.849,28,0.849,38,3.117,40,2.014,61,0.286,62,0.248,66,0.286,67,0.286,77,3.227,94,4.462,96,2.264,104,0.02,105,0.02,106,0.954,107,1.079,108,1.901,109,1.505,110,1.505,111,1.505,112,1.505,114,2.072,115,2.37,116,1.505,117,2.931,118,2.473,119,2.072,121,2.072,125,2.072,128,2.553,145,0.996,146,1.505,164,1.505,165,1.38,186,0.92,187,2.072,188,2.072,189,1.505,190,2.767,191,1.505,192,1.505,193,0.996,194,1.27,195,2.37,196,0.996,197,1.077,198,2.072,199,0.996,200,0.996,201,1.486,202,0.996,203,1.69,204,2.174,205,1.505,206,1.505,297,1.505,317,1.964,326,2.553,404,2.264,422,2.497,587,3.565,661,4.028,665,2.599,668,2.599,678,2.599,682,3.579,691,2.599,792,2.599,793,4.893,794,4.279,795,4.893,796,3.108,797,3.108,798,4.279,799,4.279,800,4.279,801,3.108,802,5.964,803,4.279,804,4.988,805,3.108,806,3.108,807,3.108,808,3.108,809,3.108,810,3.108,811,3.108,812,3.108,813,4.893,814,4.893,815,4.893,816,3.108,817,4.279,818,3.108,819,3.108,820,3.108,821,4.893,822,3.108,823,3.108,824,3.108,825,4.279,826,3.108,827,4.893,828,3.108,829,4.893,830,5.272,831,4.893,832,3.108,833,3.108,834,3.108,835,3.108,836,4.279,837,4.279]],["title/coverage.html",[838,3.633]],["body/coverage.html",[0,1.572,1,1.799,5,0.275,6,3.387,23,0.031,25,0.938,104,0.024,105,0.024,106,1.218,107,1.407,113,3.387,131,1.799,193,1.299,196,1.299,199,1.299,200,1.299,202,1.299,203,1.299,266,1.407,267,3.387,274,1.962,302,2.701,307,2.147,317,1.787,356,2.364,358,2.364,364,3.387,370,2.625,383,3.387,394,2.147,401,3.387,406,1.525,430,3.387,454,3.387,455,2.364,456,3.612,482,3.387,483,3.712,558,3.387,559,2.625,630,2.364,707,3.387,716,3.387,730,3.387,734,3.387,792,3.387,838,3.387,839,3.387,840,4.05,841,4.05,842,4.05,843,4.05,844,4.05,845,4.05,846,5.095,847,5.095,848,5.574,849,5.574,850,3.387,851,4.05,852,4.05,853,4.05,854,4.05,855,4.05,856,4.05,857,4.05,858,4.05,859,4.05,860,4.05,861,4.05,862,4.05,863,3.387,864,4.261,865,4.261,866,5.095,867,3.387,868,4.05]],["title/dependencies.html",[210,1.698,869,2.216]],["body/dependencies.html",[23,0.032,62,0.363,63,1.052,104,0.026,105,0.026,163,2.199,210,2.017,231,4.572,232,2.428,241,3.542,242,3.191,354,2.199,360,2.942,604,3.798,804,3.798,870,4.541,871,5.397,872,4.541,873,4.541,874,5.466,875,4.541,876,4.541,877,4.541,878,4.541,879,4.541,880,4.541,881,4.541,882,4.541,883,4.541,884,4.541,885,4.541,886,4.541,887,4.541,888,4.541]],["title/index.html",[7,0.736,889,3.177]],["body/index.html",[4,0.083,5,0.071,23,0.011,31,0.803,53,0.552,99,0.871,104,0.009,105,0.009,118,1.86,144,2.005,179,0.759,197,0.262,240,1.318,242,1.892,254,0.608,278,0.426,279,0.392,280,0.979,281,0.739,285,2.601,286,0.803,287,0.552,288,0.362,299,0.759,406,1.078,426,2.086,429,1.318,499,0.759,507,0.675,581,0.759,583,0.871,584,0.871,585,2.005,586,0.871,608,1.318,661,2.361,662,0.871,749,0.871,839,1.513,850,2.005,864,3.542,871,0.871,890,2.005,891,1.042,892,1.042,893,1.042,894,1.042,895,1.042,896,1.513,897,1.809,898,2.863,899,1.042,900,1.809,901,1.042,902,3.38,903,1.809,904,1.042,905,3.241,906,1.042,907,2.397,908,2.863,909,4.404,910,1.809,911,1.042,912,1.042,913,1.042,914,1.042,915,1.042,916,1.042,917,1.042,918,1.042,919,1.042,920,1.809,921,1.042,922,2.397,923,1.042,924,1.042,925,6.395,926,3.554,927,1.042,928,6.253,929,6.417,930,4.235,931,5.002,932,1.809,933,4.801,934,2.397,935,5.817,936,2.397,937,5.422,938,3.554,939,6.447,940,2.397,941,1.809,942,5.239,943,1.042,944,4.552,945,6.412,946,1.042,947,2.397,948,1.042,949,2.397,950,2.397,951,1.042,952,5.167,953,4.041,954,1.809,955,1.809,956,1.042,957,1.809,958,1.042,959,1.042,960,4.235,961,1.042,962,5.611,963,2.397,964,2.397,965,2.397,966,4.684,967,3.554,968,2.863,969,1.042,970,1.042,971,1.042,972,1.809,973,1.809,974,1.042,975,4.801,976,1.809,977,1.042,978,1.042,979,1.042,980,5.167,981,1.042,982,4.041,983,3.817,984,1.042,985,4.684,986,2.863,987,1.042,988,2.397,989,1.809,990,5.651,991,1.042,992,4.906,993,1.042,994,1.809,995,1.809,996,1.042,997,1.042,998,1.042,999,1.809,1000,1.042,1001,1.809,1002,1.042,1003,2.397,1004,1.809,1005,3.817,1006,1.042,1007,1.809,1008,1.042,1009,1.042,1010,4.235,1011,4.684,1012,1.042,1013,1.809,1014,2.397,1015,3.554,1016,1.042,1017,1.042,1018,1.809,1019,4.906,1020,4.235,1021,3.241,1022,1.809,1023,1.042,1024,2.397,1025,5.002,1026,1.042,1027,1.042,1028,1.042,1029,2.397,1030,1.042,1031,1.042,1032,1.042,1033,1.042,1034,1.042,1035,1.042,1036,1.042,1037,1.042,1038,3.241,1039,1.809,1040,1.042,1041,1.809,1042,1.042,1043,1.042,1044,1.042,1045,5.167,1046,1.042,1047,1.042,1048,1.042,1049,1.042,1050,1.042,1051,1.042,1052,1.042,1053,1.042,1054,2.397,1055,1.042,1056,3.817,1057,1.042,1058,3.241,1059,3.554,1060,4.041,1061,3.554,1062,1.042,1063,5.002,1064,1.809,1065,1.042,1066,1.042,1067,2.397,1068,2.863,1069,3.241,1070,1.042,1071,1.042,1072,1.042,1073,1.042,1074,0.871,1075,1.042,1076,1.042,1077,1.042,1078,3.554,1079,1.809,1080,1.809,1081,1.042,1082,1.042,1083,1.042,1084,3.554,1085,3.817,1086,3.241,1087,2.397,1088,3.554,1089,2.397,1090,3.241,1091,1.042,1092,1.042,1093,2.863,1094,1.809,1095,4.552,1096,2.863,1097,1.809,1098,1.809,1099,1.809,1100,1.042,1101,1.042,1102,4.235,1103,5.239,1104,2.397,1105,1.809,1106,4.801,1107,2.397,1108,3.554,1109,4.041,1110,2.397,1111,2.397,1112,3.554,1113,2.397,1114,2.397,1115,2.397,1116,2.397,1117,2.397,1118,3.554,1119,2.397,1120,2.397,1121,2.397,1122,4.235,1123,4.404,1124,2.397,1125,4.684,1126,2.781,1127,2.397,1128,2.397,1129,2.397,1130,2.397,1131,1.809,1132,1.042,1133,1.809,1134,3.554,1135,1.809,1136,2.397,1137,1.809,1138,3.241,1139,2.397,1140,3.241,1141,1.809,1142,1.809,1143,1.809,1144,1.809,1145,1.809,1146,1.809,1147,3.554,1148,1.042,1149,1.042,1150,2.863,1151,1.042,1152,1.042,1153,1.042,1154,1.042,1155,2.397,1156,2.397,1157,1.809,1158,1.042,1159,1.042,1160,1.042,1161,1.042,1162,2.397,1163,2.397,1164,1.042,1165,2.863,1166,1.809,1167,1.809,1168,1.042,1169,1.809,1170,1.042,1171,1.042,1172,1.809,1173,1.042,1174,1.042,1175,1.042,1176,1.042,1177,1.042,1178,1.809,1179,1.809,1180,1.809,1181,1.042,1182,1.042,1183,1.042,1184,2.397,1185,1.042,1186,1.042,1187,1.042,1188,1.042,1189,1.042,1190,2.863,1191,1.042,1192,1.042,1193,1.042,1194,1.809,1195,1.042,1196,1.042,1197,1.042,1198,1.809,1199,1.042,1200,1.042,1201,1.042,1202,1.042,1203,1.042,1204,1.042,1205,1.042,1206,2.397,1207,1.042,1208,1.809,1209,1.809,1210,1.042,1211,1.042,1212,2.397,1213,3.241,1214,1.042,1215,2.863,1216,1.042,1217,3.554,1218,1.042,1219,1.042,1220,1.042,1221,1.042,1222,1.809,1223,1.042,1224,1.042,1225,1.809,1226,1.809,1227,2.397,1228,2.397,1229,1.042,1230,1.042,1231,1.042,1232,1.042,1233,1.042,1234,1.042,1235,1.042,1236,1.042,1237,2.397,1238,2.397,1239,1.042,1240,1.042,1241,1.042,1242,1.042,1243,1.042,1244,1.042,1245,1.042,1246,1.042,1247,1.042,1248,1.809,1249,1.042,1250,1.042,1251,1.042,1252,1.042,1253,1.042,1254,1.809,1255,1.042,1256,1.042,1257,1.042,1258,1.042,1259,1.042,1260,1.042,1261,1.042,1262,1.042,1263,1.042,1264,1.042,1265,1.042,1266,1.042]],["title/modules.html",[209,1.186]],["body/modules.html",[23,0.026,104,0.026,105,0.026,208,3.006,209,1.267,219,2.708,220,2.708,221,2.708,232,2.783,346,2.708,350,2.708,362,3.38,693,2.708,697,2.708,698,2.708,790,2.708,1267,6.265,1268,6.265,1269,6.579,1270,6.357,1271,6.357]],["title/overview.html",[1272,3.633]],["body/overview.html",[2,1.737,23,0.031,104,0.024,105,0.024,107,2.152,108,1.737,186,1.157,193,1.758,196,1.758,199,1.758,200,1.758,202,1.758,203,1.758,207,0.832,208,4.163,209,1.068,210,1.737,211,1.737,212,2.073,213,2.073,214,1.472,215,3.27,216,3.27,217,3.27,218,3.27,219,3.201,220,3.201,221,3.481,222,2.641,223,2.073,224,2.073,317,1.253,346,3.697,347,3.27,348,3.27,349,3.27,350,3.201,693,3.75,694,3.27,695,3.27,696,3.27,697,3.201,698,3.75,787,3.27,788,3.27,789,3.27,790,3.201,1272,3.27,1273,3.909,1274,4.982]],["title/properties.html",[8,1.044,869,2.216]],["body/properties.html",[8,1.371,23,0.031,37,1.61,104,0.028,105,0.028,890,4.199,896,4.199,902,4.199,1074,4.199,1275,5.021,1276,5.021,1277,5.021,1278,5.021,1279,5.021]],["title/routes.html",[253,2.303]],["body/routes.html",[23,0.028,104,0.028,105,0.028,253,2.752]],["title/miscellaneous/variables.html",[1126,2.786,1280,2.216]],["body/miscellaneous/variables.html",[7,1.121,23,0.031,25,1.315,27,1.55,28,1.55,104,0.027,105,0.027,165,2.149,246,4.047,297,2.749,863,4.047,865,5.198,867,4.047,1126,3.525,1280,4.047,1281,4.839,1282,4.839,1283,5.677]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":317,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":818,"title":{},"body":{"components/TutorialComponent.html":{}}}],["0.15.0",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":816,"title":{},"body":{"components/TutorialComponent.html":{}}}],["0.5",{"_index":820,"title":{},"body":{"components/TutorialComponent.html":{}}}],["0/1",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0054e9",{"_index":811,"title":{},"body":{"components/TutorialComponent.html":{}}}],["1",{"_index":326,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["1.0.0",{"_index":1275,"title":{},"body":{"properties.html":{}}}],["1/3",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":581,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["10/18",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":830,"title":{},"body":{"components/TutorialComponent.html":{}}}],["10px",{"_index":689,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["11",{"_index":1273,"title":{},"body":{"overview.html":{}}}],["11.2.10",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["11.5.2",{"_index":899,"title":{},"body":{"index.html":{}}}],["12.3.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":93,"title":{},"body":{"injectables/Alerts.html":{}}}],["15px",{"_index":680,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["18px",{"_index":691,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["1].id",{"_index":325,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["1px",{"_index":686,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["2",{"_index":422,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["2.3.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":850,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["20.0.0",{"_index":871,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["21.0.4",{"_index":906,"title":{},"body":{"index.html":{}}}],["22.14.0",{"_index":901,"title":{},"body":{"index.html":{}}}],["28",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":803,"title":{},"body":{"components/TutorialComponent.html":{}}}],["3/6",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":684,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["4/6",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":800,"title":{},"body":{"components/TutorialComponent.html":{}}}],["42",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":674,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["5.4.6",{"_index":904,"title":{},"body":{"index.html":{}}}],["5/8",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["55px",{"_index":672,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["5px",{"_index":685,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["6",{"_index":1224,"title":{},"body":{"index.html":{}}}],["61",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":688,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["7",{"_index":1274,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["8/13",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":809,"title":{},"body":{"components/TutorialComponent.html":{}}}],["9.0.0",{"_index":910,"title":{},"body":{"index.html":{}}}],["9px",{"_index":677,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["abajo",{"_index":958,"title":{},"body":{"index.html":{}}}],["abre",{"_index":1123,"title":{},"body":{"index.html":{}}}],["abrir",{"_index":1113,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":667,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["acceder",{"_index":1087,"title":{},"body":{"index.html":{}}}],["acciones",{"_index":1002,"title":{},"body":{"index.html":{}}}],["acción",{"_index":1000,"title":{},"body":{"index.html":{}}}],["aceptar",{"_index":1021,"title":{},"body":{"index.html":{}}}],["acerca",{"_index":1223,"title":{},"body":{"index.html":{}}}],["action",{"_index":53,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["actionsheet",{"_index":527,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["actionsheet.present",{"_index":537,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["actionsheetcontroller",{"_index":492,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["activa",{"_index":1039,"title":{},"body":{"index.html":{}}}],["activar",{"_index":1227,"title":{},"body":{"index.html":{}}}],["active",{"_index":421,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["activo",{"_index":1214,"title":{},"body":{"index.html":{}}}],["actual",{"_index":1130,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["addcategory",{"_index":487,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["addcategory(id",{"_index":495,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["added",{"_index":750,"title":{},"body":{"injectables/Tasks.html":{}}}],["addition",{"_index":435,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["addtask",{"_index":566,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["aftercontentchecked",{"_index":625,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["afterviewchecked",{"_index":626,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["afterviewinit",{"_index":627,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["again",{"_index":593,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["agreg",{"_index":926,"title":{},"body":{"index.html":{}}}],["agrega",{"_index":1170,"title":{},"body":{"index.html":{}}}],["agregada",{"_index":1131,"title":{},"body":{"index.html":{}}}],["agregado",{"_index":1176,"title":{},"body":{"index.html":{}}}],["agregando",{"_index":970,"title":{},"body":{"index.html":{}}}],["agregar",{"_index":1134,"title":{},"body":{"index.html":{}}}],["agregaron",{"_index":1028,"title":{},"body":{"index.html":{}}}],["ajuste",{"_index":1221,"title":{},"body":{"index.html":{}}}],["ajustes",{"_index":1234,"title":{},"body":{"index.html":{}}}],["al",{"_index":960,"title":{},"body":{"index.html":{}}}],["alert",{"_index":36,"title":{},"body":{"injectables/Alerts.html":{}}}],["alert.present",{"_index":79,"title":{},"body":{"injectables/Alerts.html":{}}}],["alerta",{"_index":1012,"title":{},"body":{"index.html":{}}}],["alertas",{"_index":1027,"title":{},"body":{"index.html":{}}}],["alertcontroller",{"_index":17,"title":{},"body":{"injectables/Alerts.html":{}}}],["alerts",{"_index":1,"title":{"injectables/Alerts.html":{}},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"coverage.html":{}}}],["alertser",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["alguna",{"_index":999,"title":{},"body":{"index.html":{}}}],["align",{"_index":825,"title":{},"body":{"components/TutorialComponent.html":{}}}],["allows",{"_index":586,"title":{},"body":{"components/ListTaskComponent.html":{},"index.html":{}}}],["ambas",{"_index":1141,"title":{},"body":{"index.html":{}}}],["ambos",{"_index":1168,"title":{},"body":{"index.html":{}}}],["android",{"_index":285,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["android_home",{"_index":1184,"title":{},"body":{"index.html":{}}}],["angular",{"_index":897,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1066,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":354,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":62,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":360,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":591,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["anterior",{"_index":1140,"title":{},"body":{"index.html":{}}}],["anteriores",{"_index":1172,"title":{},"body":{"index.html":{}}}],["any).app.exitapp",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["aparecer",{"_index":1246,"title":{},"body":{"index.html":{}}}],["apk",{"_index":1262,"title":{},"body":{"index.html":{}}}],["aplicaciones",{"_index":964,"title":{},"body":{"index.html":{}}}],["aplicación",{"_index":1018,"title":{},"body":{"index.html":{}}}],["app",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"index.html":{}}}],["app.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["apply",{"_index":748,"title":{},"body":{"injectables/Tasks.html":{}}}],["appmodule",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":219,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":1156,"title":{},"body":{"index.html":{}}}],["async",{"_index":72,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["async(message",{"_index":89,"title":{},"body":{"injectables/Alerts.html":{}}}],["atrás",{"_index":1009,"title":{},"body":{"index.html":{}}}],["attr(data",{"_index":669,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["author",{"_index":1278,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":836,"title":{},"body":{"components/TutorialComponent.html":{}}}],["autorización",{"_index":1266,"title":{},"body":{"index.html":{}}}],["available",{"_index":1271,"title":{},"body":{"modules.html":{}}}],["avanzada",{"_index":1121,"title":{},"body":{"index.html":{}}}],["avanzadas",{"_index":1128,"title":{},"body":{"index.html":{}}}],["await",{"_index":74,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["awesome",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"dependencies.html":{}}}],["back",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["backbuttonevent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["backbuttonsubscription",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":675,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["base",{"_index":1202,"title":{},"body":{"index.html":{}}}],["batista",{"_index":1279,"title":{},"body":{"properties.html":{}}}],["batista/app",{"_index":1075,"title":{},"body":{"index.html":{}}}],["before",{"_index":47,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["begins",{"_index":605,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["being",{"_index":54,"title":{},"body":{"injectables/Alerts.html":{}}}],["bg",{"_index":813,"title":{},"body":{"components/TutorialComponent.html":{}}}],["bien",{"_index":1077,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["border",{"_index":678,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["bottom",{"_index":673,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["botón",{"_index":992,"title":{},"body":{"index.html":{}}}],["box",{"_index":682,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["browse",{"_index":1269,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":293,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["browsermodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["bubbles",{"_index":86,"title":{},"body":{"injectables/Alerts.html":{}}}],["build",{"_index":1190,"title":{},"body":{"index.html":{}}}],["builders",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["bullet",{"_index":806,"title":{},"body":{"components/TutorialComponent.html":{}}}],["buscar",{"_index":1222,"title":{},"body":{"index.html":{}}}],["button",{"_index":45,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"components/ListTaskComponent.html":{}}}],["button[data",{"_index":663,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["buttons",{"_index":76,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["buttons.push",{"_index":641,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["búsqueda",{"_index":943,"title":{},"body":{"index.html":{}}}],["c",{"_index":1161,"title":{},"body":{"index.html":{}}}],["c:/gradle",{"_index":1197,"title":{},"body":{"index.html":{}}}],["c:\\gradle\\bin",{"_index":1174,"title":{},"body":{"index.html":{}}}],["c:\\program",{"_index":1148,"title":{},"body":{"index.html":{}}}],["c:\\users\\usuario\\appdata\\local\\android\\sdk",{"_index":1186,"title":{},"body":{"index.html":{}}}],["cable",{"_index":1242,"title":{},"body":{"index.html":{}}}],["cambios",{"_index":923,"title":{},"body":{"index.html":{}}}],["campo",{"_index":938,"title":{},"body":{"index.html":{}}}],["campos",{"_index":1040,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":50,"title":{},"body":{"injectables/Alerts.html":{}}}],["carpeta",{"_index":1088,"title":{},"body":{"index.html":{}}}],["case",{"_index":583,"title":{},"body":{"components/ListTaskComponent.html":{},"index.html":{}}}],["caso",{"_index":986,"title":{},"body":{"index.html":{}}}],["catch",{"_index":425,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["categories",{"_index":266,"title":{"injectables/Categories.html":{}},"body":{"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"injectables/ConnectionDb.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["categories.id",{"_index":771,"title":{},"body":{"injectables/Tasks.html":{}}}],["categories/categories",{"_index":701,"title":{},"body":{"modules/PagesModule.html":{}}}],["categories/list",{"_index":632,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["categoriesmodule",{"_index":346,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesroutingmodule",{"_index":350,"title":{"modules/CategoriesRoutingModule.html":{}},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesser",{"_index":493,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["category",{"_index":277,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["category'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["category.component",{"_index":357,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["category.component.html",{"_index":485,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{}}}],["category.component.scss",{"_index":484,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{}}}],["category.component.ts",{"_index":483,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:102",{"_index":496,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:12",{"_index":709,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["category.component.ts:121",{"_index":498,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:132",{"_index":513,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:14",{"_index":521,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{}}}],["category.component.ts:144",{"_index":514,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:15",{"_index":522,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:17",{"_index":520,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{}}}],["category.component.ts:19",{"_index":494,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:27",{"_index":710,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["category.component.ts:31",{"_index":502,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:34",{"_index":712,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["category.component.ts:38",{"_index":516,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:47",{"_index":711,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["category.component.ts:68",{"_index":504,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category.component.ts:82",{"_index":510,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["category/list",{"_index":356,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"coverage.html":{}}}],["category/save",{"_index":358,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{},"coverage.html":{}}}],["categoría",{"_index":1007,"title":{},"body":{"index.html":{}}}],["categorías",{"_index":936,"title":{},"body":{"index.html":{}}}],["causa",{"_index":1258,"title":{},"body":{"index.html":{}}}],["cccccc",{"_index":810,"title":{},"body":{"components/TutorialComponent.html":{}}}],["cd",{"_index":1089,"title":{},"body":{"index.html":{}}}],["cdref",{"_index":573,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["celular",{"_index":1011,"title":{},"body":{"index.html":{}}}],["center",{"_index":827,"title":{},"body":{"components/TutorialComponent.html":{}}}],["changedetection",{"_index":560,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["changedetectionstrategy",{"_index":628,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["changedetectionstrategy.default",{"_index":561,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["changedetectorref",{"_index":574,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["changefilters",{"_index":488,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["changefilters(event",{"_index":577,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["check",{"_index":311,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"components/ListTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["checkmark",{"_index":642,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["checks",{"_index":413,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["cierra",{"_index":1022,"title":{},"body":{"index.html":{}}}],["circle",{"_index":100,"title":{},"body":{"injectables/Alerts.html":{}}}],["class",{"_index":67,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["cli",{"_index":903,"title":{},"body":{"index.html":{}}}],["click",{"_index":1116,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":46,"title":{},"body":{"injectables/Alerts.html":{}}}],["clonar",{"_index":1067,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1072,"title":{},"body":{"index.html":{}}}],["close",{"_index":30,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{}}}],["closed",{"_index":48,"title":{},"body":{"injectables/Alerts.html":{}}}],["closeloading",{"_index":9,"title":{},"body":{"injectables/Alerts.html":{}}}],["closemodal",{"_index":460,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["closing",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":347,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_declarations",{"_index":348,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_imports",{"_index":349,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule",{"_index":694,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":696,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":695,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":726,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_imports",{"_index":727,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tasksmodule",{"_index":787,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":788,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":789,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":913,"title":{},"body":{"index.html":{}}}],["color",{"_index":94,"title":{},"body":{"injectables/Alerts.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["column",{"_index":823,"title":{},"body":{"components/TutorialComponent.html":{}}}],["comando",{"_index":1063,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1061,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":353,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["como",{"_index":1029,"title":{},"body":{"index.html":{}}}],["compilación",{"_index":1155,"title":{},"body":{"index.html":{}}}],["compilar",{"_index":1198,"title":{},"body":{"index.html":{}}}],["completar",{"_index":991,"title":{},"body":{"index.html":{}}}],["completed",{"_index":423,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListTaskComponent.html":{}}}],["completion",{"_index":598,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["compodoc",{"_index":915,"title":{},"body":{"index.html":{}}}],["component",{"_index":106,"title":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CategoriesRoutingModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["componente",{"_index":930,"title":{},"body":{"index.html":{}}}],["componentes",{"_index":976,"title":{},"body":{"index.html":{}}}],["componentprops",{"_index":541,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["components",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"overview.html":{}}}],["componentsmodule",{"_index":362,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules.html":{}}}],["comprimido",{"_index":1157,"title":{},"body":{"index.html":{}}}],["con",{"_index":980,"title":{},"body":{"index.html":{}}}],["condiciones",{"_index":1053,"title":{},"body":{"index.html":{}}}],["conectado",{"_index":1215,"title":{},"body":{"index.html":{}}}],["conectados",{"_index":1241,"title":{},"body":{"index.html":{}}}],["configuraciones",{"_index":1100,"title":{},"body":{"index.html":{}}}],["configuración",{"_index":1102,"title":{},"body":{"index.html":{}}}],["configurar",{"_index":1179,"title":{},"body":{"index.html":{}}}],["configure",{"_index":997,"title":{},"body":{"index.html":{}}}],["confirmación",{"_index":1013,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":35,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["connect",{"_index":388,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["connectdb",{"_index":365,"title":{},"body":{"injectables/Connection.html":{}}}],["connecting",{"_index":373,"title":{},"body":{"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{}}}],["connection",{"_index":131,"title":{"injectables/Connection.html":{}},"body":{"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["connectiondb",{"_index":274,"title":{"injectables/ConnectionDb.html":{}},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["connectiondbser",{"_index":368,"title":{},"body":{"injectables/Connection.html":{}}}],["connectionsstorage",{"_index":370,"title":{"injectables/ConnectionSstorage.html":{}},"body":{"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"coverage.html":{}}}],["connectionstorage",{"_index":369,"title":{},"body":{"injectables/Connection.html":{}}}],["const",{"_index":73,"title":{},"body":{"injectables/Alerts.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesRoutingModule.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksRoutingModule.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["constructor(alertcontroller",{"_index":16,"title":{},"body":{"injectables/Alerts.html":{}}}],["constructor(alertser",{"_index":432,"title":{},"body":{"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["constructor(connectiondb",{"_index":272,"title":{},"body":{"injectables/Categories.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["constructor(modalcontroller",{"_index":463,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["constructor(platform",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/Connection.html":{}}}],["constructor(sqlite",{"_index":385,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["container",{"_index":805,"title":{},"body":{"components/TutorialComponent.html":{}}}],["content",{"_index":668,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["cordova",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"dependencies.html":{},"index.html":{}}}],["core/core",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/alerts",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["coremodule",{"_index":220,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correctamente",{"_index":1177,"title":{},"body":{"index.html":{}}}],["count(id",{"_index":411,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["coverage",{"_index":838,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":545,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["created",{"_index":390,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["creating",{"_index":497,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["cssclass",{"_index":81,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["cual",{"_index":994,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":954,"title":{},"body":{"index.html":{}}}],["cumpliendo",{"_index":1051,"title":{},"body":{"index.html":{}}}],["custom",{"_index":529,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["custom_elements_schema",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{}}}],["data",{"_index":296,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["data.description",{"_index":320,"title":{},"body":{"injectables/Categories.html":{},"components/FinishTaskComponent.html":{},"injectables/Tasks.html":{}}}],["data.description_state",{"_index":481,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["data.id",{"_index":332,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["data.id_category",{"_index":782,"title":{},"body":{"injectables/Tasks.html":{}}}],["data.id_state",{"_index":784,"title":{},"body":{"injectables/Tasks.html":{}}}],["data.observation",{"_index":783,"title":{},"body":{"injectables/Tasks.html":{}}}],["data.rows.item(0).total",{"_index":419,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["data.rows.length",{"_index":316,"title":{},"body":{"injectables/Categories.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["database",{"_index":279,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["datos",{"_index":953,"title":{},"body":{"index.html":{}}}],["db",{"_index":366,"title":{},"body":{"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["db.executesql(\"select",{"_index":410,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["db.executesql('create",{"_index":400,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["db.executesql('insert",{"_index":420,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["db.getitem(\"categories_tasks",{"_index":447,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.getitem(\"states_general",{"_index":443,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.getitem(\"tasks_information",{"_index":451,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.setitem(\"categories_tasks",{"_index":448,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.setitem(\"states_general",{"_index":444,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.setitem(\"tasks_information",{"_index":452,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["db.ts",{"_index":383,"title":{},"body":{"injectables/ConnectionDb.html":{},"coverage.html":{}}}],["db.ts:19",{"_index":387,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["db.ts:8",{"_index":386,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["db:sqliteobject",{"_index":396,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["dbstorage",{"_index":367,"title":{},"body":{"injectables/Connection.html":{}}}],["de",{"_index":939,"title":{},"body":{"index.html":{}}}],["debe",{"_index":1103,"title":{},"body":{"index.html":{}}}],["deben",{"_index":1166,"title":{},"body":{"index.html":{}}}],["decir",{"_index":1173,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":27,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1097,"title":{},"body":{"index.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["del",{"_index":962,"title":{},"body":{"index.html":{}}}],["delete",{"_index":534,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["deletecategory",{"_index":268,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{}}}],["deletecategory(id",{"_index":503,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["deleted",{"_index":289,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["deletetask",{"_index":567,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["deletetask(id",{"_index":594,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["deleting",{"_index":505,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["demostración",{"_index":1152,"title":{},"body":{"index.html":{}}}],["dependencia",{"_index":1203,"title":{},"body":{"index.html":{}}}],["dependencias",{"_index":1091,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":210,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":1231,"title":{},"body":{"index.html":{}}}],["depending",{"_index":282,"title":{},"body":{"injectables/Categories.html":{},"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["deployed",{"_index":920,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1192,"title":{},"body":{"index.html":{}}}],["depuración",{"_index":1228,"title":{},"body":{"index.html":{}}}],["derecha",{"_index":1120,"title":{},"body":{"index.html":{}}}],["derecho",{"_index":1117,"title":{},"body":{"index.html":{}}}],["desactiva",{"_index":1055,"title":{},"body":{"index.html":{}}}],["desarrollador",{"_index":1213,"title":{},"body":{"index.html":{}}}],["desc",{"_index":664,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["desc]::after",{"_index":666,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["descargar",{"_index":1058,"title":{},"body":{"index.html":{}}}],["descomprimi",{"_index":1171,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":946,"title":{},"body":{"index.html":{}}}],["description",{"_index":37,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"properties.html":{}}}],["description_state",{"_index":467,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["desde",{"_index":1069,"title":{},"body":{"index.html":{}}}],["desliza",{"_index":955,"title":{},"body":{"index.html":{}}}],["después",{"_index":1086,"title":{},"body":{"index.html":{}}}],["details",{"_index":891,"title":{},"body":{"index.html":{}}}],["detallada",{"_index":1256,"title":{},"body":{"index.html":{}}}],["device",{"_index":1249,"title":{},"body":{"index.html":{}}}],["dichas",{"_index":1052,"title":{},"body":{"index.html":{}}}],["different",{"_index":638,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["direction",{"_index":822,"title":{},"body":{"components/TutorialComponent.html":{}}}],["directive",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["disco",{"_index":1160,"title":{},"body":{"index.html":{}}}],["display",{"_index":40,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["displayed",{"_index":518,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["displaying",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["dispositivo",{"_index":1237,"title":{},"body":{"index.html":{}}}],["dispositivos",{"_index":1240,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":839,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["dos",{"_index":1209,"title":{},"body":{"index.html":{}}}],["drag",{"_index":819,"title":{},"body":{"components/TutorialComponent.html":{}}}],["duration",{"_index":92,"title":{},"body":{"injectables/Alerts.html":{}}}],["dynamic",{"_index":604,"title":{},"body":{"components/ListTaskComponent.html":{},"dependencies.html":{}}}],["e",{"_index":426,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"index.html":{}}}],["edit",{"_index":531,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["editar",{"_index":988,"title":{},"body":{"index.html":{}}}],["editcategory",{"_index":489,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["editcategory(data",{"_index":509,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["editing",{"_index":511,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["editor",{"_index":1180,"title":{},"body":{"index.html":{}}}],["effect",{"_index":656,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["ejecución",{"_index":1208,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":995,"title":{},"body":{"index.html":{}}}],["ejecutando",{"_index":1178,"title":{},"body":{"index.html":{}}}],["ejecutar",{"_index":1060,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":1001,"title":{},"body":{"index.html":{}}}],["el",{"_index":929,"title":{},"body":{"index.html":{}}}],["element",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["eliminar",{"_index":989,"title":{},"body":{"index.html":{}}}],["emulador",{"_index":1211,"title":{},"body":{"index.html":{}}}],["emuladores",{"_index":1245,"title":{},"body":{"index.html":{}}}],["emular",{"_index":1199,"title":{},"body":{"index.html":{}}}],["en",{"_index":928,"title":{},"body":{"index.html":{}}}],["end",{"_index":554,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["endcon",{"_index":562,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["endcon:number",{"_index":636,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["ends",{"_index":606,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["entorno",{"_index":1106,"title":{},"body":{"index.html":{}}}],["enumerating",{"_index":600,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/States.html":{}}}],["environment",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equipo",{"_index":1085,"title":{},"body":{"index.html":{}}}],["error",{"_index":429,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"index.html":{}}}],["es",{"_index":1015,"title":{},"body":{"index.html":{}}}],["eso",{"_index":1205,"title":{},"body":{"index.html":{}}}],["esta",{"_index":1125,"title":{},"body":{"index.html":{}}}],["estando",{"_index":959,"title":{},"body":{"index.html":{}}}],["estas",{"_index":1026,"title":{},"body":{"index.html":{}}}],["este",{"_index":966,"title":{},"body":{"index.html":{}}}],["esto",{"_index":1109,"title":{},"body":{"index.html":{}}}],["event",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["event.target.complete",{"_index":553,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["evitando",{"_index":1260,"title":{},"body":{"index.html":{}}}],["execute",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["executed",{"_index":43,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Tasks.html":{}}}],["execution",{"_index":1191,"title":{},"body":{"index.html":{}}}],["exist",{"_index":392,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["exists",{"_index":402,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["exit",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["explorador",{"_index":1114,"title":{},"body":{"index.html":{}}}],["export",{"_index":66,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["exports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["extraer",{"_index":1159,"title":{},"body":{"index.html":{}}}],["fab",{"_index":662,"title":{},"body":{"components/ListTaskComponent.html":{},"index.html":{}}}],["false",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"miscellaneous/variables.html":{}}}],["fi",{"_index":1244,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"index.html":{}}}],["files\\java\\jdk",{"_index":1149,"title":{},"body":{"index.html":{}}}],["filter",{"_index":500,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["filter((item:any",{"_index":340,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["filters",{"_index":305,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["filters.idcategory",{"_index":773,"title":{},"body":{"injectables/Tasks.html":{}}}],["final",{"_index":608,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["find",{"_index":333,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["find.description",{"_index":337,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["find.id_state",{"_index":786,"title":{},"body":{"injectables/Tasks.html":{}}}],["find.observation",{"_index":785,"title":{},"body":{"injectables/Tasks.html":{}}}],["finish",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["finishtask",{"_index":568,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["finishtask(data",{"_index":596,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["finishtaskcomponent",{"_index":193,"title":{"components/FinishTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["first",{"_index":417,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListTaskComponent.html":{}}}],["flex",{"_index":821,"title":{},"body":{"components/TutorialComponent.html":{}}}],["flotante",{"_index":993,"title":{},"body":{"index.html":{}}}],["fnt_cancel",{"_index":49,"title":{},"body":{"injectables/Alerts.html":{}}}],["fnt_ok",{"_index":42,"title":{},"body":{"injectables/Alerts.html":{}}}],["font",{"_index":832,"title":{},"body":{"components/TutorialComponent.html":{}}}],["formas",{"_index":1210,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":359,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/TasksModule.html":{}}}],["frontend",{"_index":892,"title":{},"body":{"index.html":{}}}],["fueron",{"_index":987,"title":{},"body":{"index.html":{}}}],["full",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcionaría",{"_index":1201,"title":{},"body":{"index.html":{}}}],["function",{"_index":71,"title":{},"body":{"injectables/Alerts.html":{}}}],["g",{"_index":1065,"title":{},"body":{"index.html":{}}}],["genera",{"_index":1162,"title":{},"body":{"index.html":{}}}],["generado",{"_index":1251,"title":{},"body":{"index.html":{}}}],["generales",{"_index":1057,"title":{},"body":{"index.html":{}}}],["generan",{"_index":1239,"title":{},"body":{"index.html":{}}}],["generar",{"_index":950,"title":{},"body":{"index.html":{}}}],["generate",{"_index":57,"title":{},"body":{"injectables/Alerts.html":{},"components/ListTaskComponent.html":{}}}],["generateconfirmationalert",{"_index":10,"title":{},"body":{"injectables/Alerts.html":{}}}],["generated",{"_index":507,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["generateloading",{"_index":11,"title":{},"body":{"injectables/Alerts.html":{}}}],["generatenotification",{"_index":12,"title":{},"body":{"injectables/Alerts.html":{}}}],["generates",{"_index":917,"title":{},"body":{"index.html":{}}}],["generatesimplealert",{"_index":13,"title":{},"body":{"injectables/Alerts.html":{}}}],["generating",{"_index":34,"title":{},"body":{"injectables/Alerts.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["git",{"_index":1071,"title":{},"body":{"index.html":{}}}],["github",{"_index":922,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":909,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1270,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":1038,"title":{},"body":{"index.html":{}}}],["ha",{"_index":1181,"title":{},"body":{"index.html":{}}}],["haber",{"_index":1048,"title":{},"body":{"index.html":{}}}],["hace",{"_index":1110,"title":{},"body":{"index.html":{}}}],["hacer",{"_index":1136,"title":{},"body":{"index.html":{}}}],["hacia",{"_index":957,"title":{},"body":{"index.html":{}}}],["han",{"_index":1041,"title":{},"body":{"index.html":{}}}],["handler",{"_index":78,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["hardwarebackbutton",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["hay",{"_index":1248,"title":{},"body":{"index.html":{}}}],["header",{"_index":38,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/TutorialComponent.html":{}}}],["hecho",{"_index":1182,"title":{},"body":{"index.html":{}}}],["height",{"_index":831,"title":{},"body":{"components/TutorialComponent.html":{}}}],["herramienta",{"_index":1080,"title":{},"body":{"index.html":{}}}],["history",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":1196,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1276,"title":{},"body":{"properties.html":{}}}],["html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["http://localhost:8100",{"_index":1099,"title":{},"body":{"index.html":{}}}],["https://github.com/dev",{"_index":1073,"title":{},"body":{"index.html":{}}}],["https://ionicframework.com",{"_index":1277,"title":{},"body":{"properties.html":{}}}],["i.e",{"_index":588,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["icon",{"_index":98,"title":{},"body":{"injectables/Alerts.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["id",{"_index":288,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["id_category",{"_index":408,"title":{},"body":{"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["id_state",{"_index":409,"title":{},"body":{"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["idcategory",{"_index":620,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["identifier",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["if(data.id_state",{"_index":640,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["if(db.getitem(\"categories_tasks",{"_index":446,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["if(db.getitem(\"states_general",{"_index":442,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["if(db.getitem(\"tasks_information",{"_index":450,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["if(event",{"_index":552,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["if(filters.idcategory",{"_index":755,"title":{},"body":{"injectables/Tasks.html":{}}}],["if(filters.taskdescription",{"_index":752,"title":{},"body":{"injectables/Tasks.html":{}}}],["if(find",{"_index":336,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["if(start",{"_index":775,"title":{},"body":{"injectables/Tasks.html":{}}}],["if(this.filters.taskdescription",{"_index":546,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["if(this.platform.is('android",{"_index":313,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["if(this.typeaction",{"_index":713,"title":{},"body":{"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["img",{"_index":835,"title":{},"body":{"components/TutorialComponent.html":{}}}],["implements",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["import",{"_index":61,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["import('./categories/categories",{"_index":703,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["import('./shared/pages/pages",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tasks/tasks",{"_index":705,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["important",{"_index":911,"title":{},"body":{"index.html":{}}}],["importantes",{"_index":1101,"title":{},"body":{"index.html":{}}}],["imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["inactive",{"_index":807,"title":{},"body":{"components/TutorialComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":52,"title":{},"body":{"injectables/Alerts.html":{}}}],["infinite",{"_index":584,"title":{},"body":{"components/ListTaskComponent.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["information",{"_index":99,"title":{},"body":{"injectables/Alerts.html":{},"index.html":{}}}],["inicial",{"_index":1017,"title":{},"body":{"index.html":{}}}],["initial",{"_index":393,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["initialize",{"_index":441,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["initializeapp",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["initialized",{"_index":436,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["initializes",{"_index":389,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["initialslide",{"_index":798,"title":{},"body":{"components/TutorialComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"overview.html":{}}}],["inner",{"_index":768,"title":{},"body":{"injectables/Tasks.html":{}}}],["input",{"_index":475,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["inputs",{"_index":462,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["instalación",{"_index":1108,"title":{},"body":{"index.html":{}}}],["instalador",{"_index":1133,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":1059,"title":{},"body":{"index.html":{}}}],["instalarlo",{"_index":1105,"title":{},"body":{"index.html":{}}}],["install",{"_index":1064,"title":{},"body":{"index.html":{}}}],["instrucciones",{"_index":1056,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["integer",{"_index":403,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["internal",{"_index":278,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["internet",{"_index":1104,"title":{},"body":{"index.html":{}}}],["intranet/connection",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["ion",{"_index":661,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{},"index.html":{}}}],["ionic",{"_index":902,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ionic's",{"_index":614,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["ionic/angular",{"_index":63,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"injectables/Connection.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["ionic/cordova",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/TasksModule.html":{}}}],["ionicmodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":286,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["item",{"_index":978,"title":{},"body":{"index.html":{}}}],["item.description",{"_index":557,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["item.description.tolowercase().includes(filters.taskdescription.tolowercase",{"_index":772,"title":{},"body":{"injectables/Tasks.html":{}}}],["item.description.tolowercase().includes(this.filters.taskdescription.tolowercase",{"_index":549,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["item.description_state",{"_index":660,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["item.id",{"_index":335,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["item.id_category",{"_index":343,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["items",{"_index":826,"title":{},"body":{"components/TutorialComponent.html":{}}}],["java",{"_index":907,"title":{},"body":{"index.html":{}}}],["java_home",{"_index":1107,"title":{},"body":{"index.html":{}}}],["jdk",{"_index":908,"title":{},"body":{"index.html":{}}}],["join",{"_index":769,"title":{},"body":{"injectables/Tasks.html":{}}}],["json.parse(this.connectiondb.dbstorage.getitem(\"categories_tasks",{"_index":322,"title":{},"body":{"injectables/Categories.html":{}}}],["json.parse(this.connectiondb.dbstorage.getitem(\"states_general",{"_index":778,"title":{},"body":{"injectables/Tasks.html":{}}}],["json.parse(this.connectiondb.dbstorage.getitem(\"tasks_information",{"_index":342,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["json.stringify",{"_index":449,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["json.stringify(result",{"_index":329,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["json.stringify(resulttasks",{"_index":345,"title":{},"body":{"injectables/Categories.html":{}}}],["json.stringify(states",{"_index":445,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["justify",{"_index":828,"title":{},"body":{"components/TutorialComponent.html":{}}}],["key",{"_index":405,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["la",{"_index":945,"title":{},"body":{"index.html":{}}}],["las",{"_index":933,"title":{},"body":{"index.html":{}}}],["le",{"_index":1082,"title":{},"body":{"index.html":{}}}],["legend",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"components/TutorialComponent.html":{},"overview.html":{}}}],["library",{"_index":916,"title":{},"body":{"index.html":{}}}],["limit",{"_index":760,"title":{},"body":{"injectables/Tasks.html":{}}}],["list",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"index.html":{}}}],["lista",{"_index":932,"title":{},"body":{"index.html":{}}}],["listado",{"_index":952,"title":{},"body":{"index.html":{}}}],["listados",{"_index":1046,"title":{},"body":{"index.html":{}}}],["listallcategories",{"_index":490,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["listallcategories(event",{"_index":512,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["listallstates",{"_index":731,"title":{},"body":{"injectables/States.html":{}}}],["listalltasks",{"_index":569,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["listalltasks(event",{"_index":601,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["listcategories",{"_index":269,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["listcategories:any",{"_index":525,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["listcategoriesfilter",{"_index":486,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["listcategoriesfilter:any",{"_index":526,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["listcategorycomponent",{"_index":196,"title":{"components/ListCategoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listing",{"_index":291,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["liststates",{"_index":777,"title":{},"body":{"injectables/Tasks.html":{}}}],["listtaskcomponent",{"_index":199,"title":{"components/ListTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listtasks",{"_index":563,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["listtasks:any",{"_index":633,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["listtasksfilter",{"_index":564,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["listtasksfilter:any",{"_index":634,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["llama",{"_index":1145,"title":{},"body":{"index.html":{}}}],["llamada",{"_index":1163,"title":{},"body":{"index.html":{}}}],["llamado",{"_index":947,"title":{},"body":{"index.html":{}}}],["llenados",{"_index":1043,"title":{},"body":{"index.html":{}}}],["lo",{"_index":973,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["loaddata",{"_index":570,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["loaddata(event",{"_index":610,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["loaddata(event:any",{"_index":657,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["loaded",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["loading",{"_index":14,"title":{},"body":{"injectables/Alerts.html":{},"components/ListTaskComponent.html":{}}}],["loadingcontroller",{"_index":18,"title":{},"body":{"injectables/Alerts.html":{}}}],["local",{"_index":280,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["locally",{"_index":438,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["localstorage",{"_index":440,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["location",{"_index":399,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["los",{"_index":975,"title":{},"body":{"index.html":{}}}],["m",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["m.categoriesmodule",{"_index":704,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["m.pagesmodule",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tasksmodule",{"_index":706,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["manage",{"_index":893,"title":{},"body":{"index.html":{}}}],["manera",{"_index":1255,"title":{},"body":{"index.html":{}}}],["manualmente",{"_index":1135,"title":{},"body":{"index.html":{}}}],["marca",{"_index":1232,"title":{},"body":{"index.html":{}}}],["mas",{"_index":972,"title":{},"body":{"index.html":{}}}],["match",{"_index":304,"title":{},"body":{"injectables/Categories.html":{}}}],["matching",{"_index":105,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":837,"title":{},"body":{"components/TutorialComponent.html":{}}}],["means",{"_index":580,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["mediante",{"_index":1033,"title":{},"body":{"index.html":{}}}],["meet",{"_index":744,"title":{},"body":{"injectables/Tasks.html":{}}}],["men",{"_index":1187,"title":{},"body":{"index.html":{}}}],["message",{"_index":41,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["metadata",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["methods",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["metodo",{"_index":996,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1280,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismos",{"_index":1137,"title":{},"body":{"index.html":{}}}],["modal",{"_index":31,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"index.html":{}}}],["modal.ondiddismiss().then(async",{"_index":544,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["modal.present",{"_index":543,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["modalcontroller",{"_index":464,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["mode",{"_index":530,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["modelo",{"_index":1226,"title":{},"body":{"index.html":{}}}],["modifica",{"_index":1195,"title":{},"body":{"index.html":{}}}],["modo",{"_index":1212,"title":{},"body":{"index.html":{}}}],["module",{"_index":207,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["module').then",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["module.ts",{"_index":352,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["modules",{"_index":209,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":1259,"title":{},"body":{"index.html":{}}}],["more",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrar",{"_index":967,"title":{},"body":{"index.html":{}}}],["moving",{"_index":589,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["muchas",{"_index":963,"title":{},"body":{"index.html":{}}}],["muestre",{"_index":1254,"title":{},"body":{"index.html":{}}}],["mydata.db",{"_index":398,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["métodos",{"_index":1031,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["nativa",{"_index":1204,"title":{},"body":{"index.html":{}}}],["navegador",{"_index":1096,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["navigation",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["navigator",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["necesaria",{"_index":1154,"title":{},"body":{"index.html":{}}}],["necesidad",{"_index":1261,"title":{},"body":{"index.html":{}}}],["new",{"_index":307,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["ngmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngoninit",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["node",{"_index":1092,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":900,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":1146,"title":{},"body":{"index.html":{}}}],["note",{"_index":912,"title":{},"body":{"index.html":{}}}],["notification",{"_index":59,"title":{},"body":{"injectables/Alerts.html":{}}}],["npm",{"_index":898,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":1003,"title":{},"body":{"index.html":{}}}],["nueva...y",{"_index":1144,"title":{},"body":{"index.html":{}}}],["nuevamente",{"_index":951,"title":{},"body":{"index.html":{}}}],["null",{"_index":375,"title":{},"body":{"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["number",{"_index":338,"title":{},"body":{"injectables/Categories.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["o",{"_index":1005,"title":{},"body":{"index.html":{}}}],["object",{"_index":297,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"miscellaneous/variables.html":{}}}],["objetivo",{"_index":981,"title":{},"body":{"index.html":{}}}],["objetos",{"_index":1036,"title":{},"body":{"index.html":{}}}],["observation",{"_index":407,"title":{},"body":{"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["obtained",{"_index":607,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["occurs",{"_index":415,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["offset",{"_index":761,"title":{},"body":{"injectables/Tasks.html":{}}}],["ok",{"_index":44,"title":{},"body":{"injectables/Alerts.html":{}}}],["omitirlos",{"_index":1183,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":629,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["one",{"_index":590,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["oninit",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["opciones",{"_index":982,"title":{},"body":{"index.html":{}}}],["opción",{"_index":1045,"title":{},"body":{"index.html":{}}}],["openconnectiondb",{"_index":384,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["openconnectionstorage",{"_index":431,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["opened",{"_index":416,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["optado",{"_index":1049,"title":{},"body":{"index.html":{}}}],["option",{"_index":639,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["options",{"_index":517,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["orientada",{"_index":1035,"title":{},"body":{"index.html":{}}}],["otra",{"_index":1129,"title":{},"body":{"index.html":{}}}],["out",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["outlet",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.cangoback",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.pop",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["outline",{"_index":101,"title":{},"body":{"injectables/Alerts.html":{},"components/ListTaskComponent.html":{}}}],["overview",{"_index":1272,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":869,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":676,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["page",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ListTaskComponent.html":{},"index.html":{}}}],["pages",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/PagesModule.html":{}}}],["pages/pages",{"_index":729,"title":{},"body":{"modules/SharedModule.html":{}}}],["pagesmodule",{"_index":693,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":697,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["pagina",{"_index":1016,"title":{},"body":{"index.html":{}}}],["paginación",{"_index":969,"title":{},"body":{"index.html":{}}}],["paginated",{"_index":579,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["paginating",{"_index":612,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["pagination",{"_index":587,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["pantalla",{"_index":956,"title":{},"body":{"index.html":{}}}],["para",{"_index":990,"title":{},"body":{"index.html":{}}}],["param",{"_index":69,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["parte",{"_index":1119,"title":{},"body":{"index.html":{}}}],["pasarlo",{"_index":1263,"title":{},"body":{"index.html":{}}}],["pasos",{"_index":1138,"title":{},"body":{"index.html":{}}}],["path",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["pathmatch",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pc",{"_index":287,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["pedir",{"_index":1265,"title":{},"body":{"index.html":{}}}],["pencil",{"_index":532,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["per",{"_index":582,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["performed",{"_index":55,"title":{},"body":{"injectables/Alerts.html":{}}}],["performing",{"_index":508,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["permita",{"_index":1083,"title":{},"body":{"index.html":{}}}],["permite",{"_index":949,"title":{},"body":{"index.html":{}}}],["pero",{"_index":1054,"title":{},"body":{"index.html":{}}}],["pestaña",{"_index":1127,"title":{},"body":{"index.html":{}}}],["platform",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["plugins/core",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["plugins/sqlite",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["plugins/sqlite/ngx",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{}}}],["por",{"_index":944,"title":{},"body":{"index.html":{}}}],["position",{"_index":96,"title":{},"body":{"injectables/Alerts.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["preloadallmodules",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presionar",{"_index":1115,"title":{},"body":{"index.html":{}}}],["pressing",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["primary",{"_index":404,"title":{},"body":{"injectables/ConnectionDb.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["primer",{"_index":1247,"title":{},"body":{"index.html":{}}}],["primera",{"_index":1264,"title":{},"body":{"index.html":{}}}],["principal",{"_index":1188,"title":{},"body":{"index.html":{}}}],["principio",{"_index":961,"title":{},"body":{"index.html":{}}}],["private",{"_index":68,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["process",{"_index":556,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["processnexthandler",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["production",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programación",{"_index":1034,"title":{},"body":{"index.html":{}}}],["progressbar",{"_index":812,"title":{},"body":{"components/TutorialComponent.html":{}}}],["project",{"_index":890,"title":{},"body":{"index.html":{},"properties.html":{}}}],["promise",{"_index":303,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["promise(async",{"_index":308,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"properties.html":{}}}],["propiedades",{"_index":1118,"title":{},"body":{"index.html":{}}}],["provide",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":64,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["providers",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["proyecto",{"_index":1068,"title":{},"body":{"index.html":{}}}],["prueba",{"_index":1206,"title":{},"body":{"index.html":{}}}],["pruebas",{"_index":1207,"title":{},"body":{"index.html":{}}}],["pudo",{"_index":1047,"title":{},"body":{"index.html":{}}}],["pueda",{"_index":984,"title":{},"body":{"index.html":{}}}],["puede",{"_index":1078,"title":{},"body":{"index.html":{}}}],["puerto",{"_index":1216,"title":{},"body":{"index.html":{}}}],["punto",{"_index":1139,"title":{},"body":{"index.html":{}}}],["que",{"_index":931,"title":{},"body":{"index.html":{}}}],["qued",{"_index":1175,"title":{},"body":{"index.html":{}}}],["query",{"_index":751,"title":{},"body":{"injectables/Tasks.html":{}}}],["querylist",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":679,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["readme",{"_index":889,"title":{"index.html":{}},"body":{}}],["real",{"_index":1219,"title":{},"body":{"index.html":{}}}],["realiza",{"_index":941,"title":{},"body":{"index.html":{}}}],["realizados",{"_index":924,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":968,"title":{},"body":{"index.html":{}}}],["reconoce",{"_index":1236,"title":{},"body":{"index.html":{}}}],["recording",{"_index":742,"title":{},"body":{"injectables/Tasks.html":{}}}],["records",{"_index":740,"title":{},"body":{"injectables/Tasks.html":{}}}],["redirectto",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reemplazar",{"_index":1153,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":592,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["refresher",{"_index":948,"title":{},"body":{"index.html":{}}}],["refreshing",{"_index":555,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["register",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionDb.html":{}}}],["registered",{"_index":292,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["registering",{"_index":295,"title":{},"body":{"injectables/Categories.html":{}}}],["registran",{"_index":1037,"title":{},"body":{"index.html":{}}}],["registrar",{"_index":1006,"title":{},"body":{"index.html":{}}}],["registros",{"_index":971,"title":{},"body":{"index.html":{}}}],["relative",{"_index":665,"title":{},"body":{"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["relizar",{"_index":998,"title":{},"body":{"index.html":{}}}],["remove",{"_index":276,"title":{},"body":{"injectables/Categories.html":{}}}],["renderizar",{"_index":1050,"title":{},"body":{"index.html":{}}}],["renombrar",{"_index":1164,"title":{},"body":{"index.html":{}}}],["repositorio",{"_index":1070,"title":{},"body":{"index.html":{}}}],["reset",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resolve",{"_index":309,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["resolve(db",{"_index":424,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["resolve(null",{"_index":427,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["resolve(result",{"_index":781,"title":{},"body":{"injectables/Tasks.html":{}}}],["result",{"_index":321,"title":{},"body":{"injectables/Categories.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["result.filter((item:any",{"_index":774,"title":{},"body":{"injectables/Tasks.html":{}}}],["result.find((item:any",{"_index":334,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["result.length",{"_index":323,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["result.push",{"_index":327,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["result.slice(start",{"_index":776,"title":{},"body":{"injectables/Tasks.html":{}}}],["result:any",{"_index":310,"title":{},"body":{"injectables/Categories.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["result[i].description_state",{"_index":780,"title":{},"body":{"injectables/Tasks.html":{}}}],["result[i].id_state",{"_index":779,"title":{},"body":{"injectables/Tasks.html":{}}}],["result[result.length",{"_index":324,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["results",{"_index":104,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulttasks",{"_index":341,"title":{},"body":{"injectables/Categories.html":{}}}],["return",{"_index":306,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["returns",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{}}}],["reutilizables",{"_index":1032,"title":{},"body":{"index.html":{}}}],["rgb",{"_index":815,"title":{},"body":{"components/TutorialComponent.html":{}}}],["rgba(0,0,0,0.12",{"_index":692,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["rgba(0,0,0,0.14",{"_index":690,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":687,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["rgba(var",{"_index":814,"title":{},"body":{"components/TutorialComponent.html":{}}}],["right",{"_index":671,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["role",{"_index":80,"title":{},"body":{"injectables/Alerts.html":{}}}],["root",{"_index":65,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["root'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["router",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["routereusestrategy",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":361,"title":{},"body":{"modules/CategoriesRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlets",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":253,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"routes.html":{}}}],["routing",{"_index":355,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routing.module",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1238,"title":{},"body":{"index.html":{}}}],["running",{"_index":284,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["runs",{"_index":613,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["ruta",{"_index":1165,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{}}}],["savecategory",{"_index":270,"title":{},"body":{"injectables/Categories.html":{}}}],["savecategorycomponent",{"_index":200,"title":{"components/SaveCategoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["savedatacategory",{"_index":708,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["savedatatask",{"_index":461,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["savetask",{"_index":735,"title":{},"body":{"injectables/Tasks.html":{}}}],["savetaskcomponent",{"_index":202,"title":{"components/SaveTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saving",{"_index":474,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["schemas",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{}}}],["screen",{"_index":58,"title":{},"body":{"injectables/Alerts.html":{}}}],["scroll",{"_index":585,"title":{},"body":{"components/ListTaskComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":817,"title":{},"body":{"components/TutorialComponent.html":{}}}],["se",{"_index":925,"title":{},"body":{"index.html":{}}}],["search",{"_index":501,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["secciones",{"_index":1142,"title":{},"body":{"index.html":{}}}],["sección",{"_index":1194,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":82,"title":{},"body":{"injectables/Alerts.html":{}}}],["seguir",{"_index":1167,"title":{},"body":{"index.html":{}}}],["segunda",{"_index":1218,"title":{},"body":{"index.html":{}}}],["seguridad",{"_index":1235,"title":{},"body":{"index.html":{}}}],["selecciona",{"_index":1020,"title":{},"body":{"index.html":{}}}],["seleccionado",{"_index":1044,"title":{},"body":{"index.html":{}}}],["seleccionar",{"_index":985,"title":{},"body":{"index.html":{}}}],["seleccione",{"_index":1189,"title":{},"body":{"index.html":{}}}],["select",{"_index":659,"title":{},"body":{"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["selectcategory",{"_index":491,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["selectcategory(data",{"_index":515,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["selected",{"_index":506,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["selecttask",{"_index":571,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["selecttask(data",{"_index":616,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["sending",{"_index":473,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["sent",{"_index":298,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["serve",{"_index":1094,"title":{},"body":{"index.html":{}}}],["server",{"_index":921,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":1030,"title":{},"body":{"index.html":{}}}],["set",{"_index":331,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["settings",{"_index":749,"title":{},"body":{"injectables/Tasks.html":{},"index.html":{}}}],["shadow",{"_index":683,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["shared/shared",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":221,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":977,"title":{},"body":{"index.html":{}}}],["shelvin",{"_index":1074,"title":{},"body":{"index.html":{},"properties.html":{}}}],["showcategories",{"_index":572,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["shrink",{"_index":824,"title":{},"body":{"components/TutorialComponent.html":{}}}],["si",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sido",{"_index":1042,"title":{},"body":{"index.html":{}}}],["siguen",{"_index":1143,"title":{},"body":{"index.html":{}}}],["siguiendo",{"_index":1111,"title":{},"body":{"index.html":{}}}],["siguiente",{"_index":1062,"title":{},"body":{"index.html":{}}}],["siguientes",{"_index":1112,"title":{},"body":{"index.html":{}}}],["simple",{"_index":894,"title":{},"body":{"index.html":{}}}],["sino",{"_index":1023,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":1122,"title":{},"body":{"index.html":{}}}],["size",{"_index":833,"title":{},"body":{"components/TutorialComponent.html":{}}}],["sizing",{"_index":834,"title":{},"body":{"components/TutorialComponent.html":{}}}],["slide",{"_index":802,"title":{},"body":{"components/TutorialComponent.html":{}}}],["slideopts",{"_index":795,"title":{},"body":{"components/TutorialComponent.html":{}}}],["sliding",{"_index":979,"title":{},"body":{"index.html":{}}}],["solo",{"_index":1024,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Categories.html":{},"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{},"modules/ComponentsModule.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"modules/CoreModule.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"modules/SharedModule.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TutorialComponent.html":{},"index.html":{}}}],["speed",{"_index":799,"title":{},"body":{"components/TutorialComponent.html":{}}}],["spinner",{"_index":85,"title":{},"body":{"injectables/Alerts.html":{}}}],["sqlite",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectionDb.html":{},"index.html":{}}}],["sqliteobject",{"_index":374,"title":{},"body":{"injectables/Connection.html":{},"injectables/ConnectionDb.html":{}}}],["src/.../environment.prod.ts",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core",{"_index":453,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/services/alerts",{"_index":523,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["src/app/core/services/alerts.ts",{"_index":6,"title":{},"body":{"injectables/Alerts.html":{},"coverage.html":{}}}],["src/app/core/services/alerts.ts:23",{"_index":60,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/alerts.ts:48",{"_index":32,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/alerts.ts:78",{"_index":51,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/alerts.ts:8",{"_index":21,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/alerts.ts:89",{"_index":29,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/alerts.ts:98",{"_index":56,"title":{},"body":{"injectables/Alerts.html":{}}}],["src/app/core/services/categories",{"_index":524,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["src/app/core/services/categories.ts",{"_index":267,"title":{},"body":{"injectables/Categories.html":{},"coverage.html":{}}}],["src/app/core/services/categories.ts:20",{"_index":290,"title":{},"body":{"injectables/Categories.html":{}}}],["src/app/core/services/categories.ts:47",{"_index":294,"title":{},"body":{"injectables/Categories.html":{}}}],["src/app/core/services/categories.ts:72",{"_index":300,"title":{},"body":{"injectables/Categories.html":{}}}],["src/app/core/services/categories.ts:8",{"_index":273,"title":{},"body":{"injectables/Categories.html":{}}}],["src/app/core/services/categories.ts:96",{"_index":275,"title":{},"body":{"injectables/Categories.html":{}}}],["src/app/core/services/states.ts",{"_index":730,"title":{},"body":{"injectables/States.html":{},"coverage.html":{}}}],["src/app/core/services/states.ts:20",{"_index":733,"title":{},"body":{"injectables/States.html":{}}}],["src/app/core/services/states.ts:8",{"_index":732,"title":{},"body":{"injectables/States.html":{}}}],["src/app/core/services/tasks",{"_index":476,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["src/app/core/services/tasks.ts",{"_index":734,"title":{},"body":{"injectables/Tasks.html":{},"coverage.html":{}}}],["src/app/core/services/tasks.ts:114",{"_index":743,"title":{},"body":{"injectables/Tasks.html":{}}}],["src/app/core/services/tasks.ts:139",{"_index":738,"title":{},"body":{"injectables/Tasks.html":{}}}],["src/app/core/services/tasks.ts:23",{"_index":739,"title":{},"body":{"injectables/Tasks.html":{}}}],["src/app/core/services/tasks.ts:8",{"_index":737,"title":{},"body":{"injectables/Tasks.html":{}}}],["src/app/core/services/tasks.ts:89",{"_index":741,"title":{},"body":{"injectables/Tasks.html":{}}}],["src/app/intranet/connection",{"_index":302,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["src/app/intranet/connection.ts",{"_index":364,"title":{},"body":{"injectables/Connection.html":{},"coverage.html":{}}}],["src/app/intranet/connection.ts:11",{"_index":377,"title":{},"body":{"injectables/Connection.html":{}}}],["src/app/intranet/connection.ts:12",{"_index":371,"title":{},"body":{"injectables/Connection.html":{}}}],["src/app/intranet/connection.ts:23",{"_index":372,"title":{},"body":{"injectables/Connection.html":{}}}],["src/app/shared/components/components",{"_index":363,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/shared/pages/categories/categories",{"_index":351,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CategoriesRoutingModule.html":{}}}],["src/app/shared/pages/categories/list",{"_index":482,"title":{},"body":{"components/ListCategoryComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/categories/save",{"_index":707,"title":{},"body":{"components/SaveCategoryComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/pages",{"_index":699,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["src/app/shared/pages/tasks/finish",{"_index":454,"title":{},"body":{"components/FinishTaskComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/tasks/list",{"_index":558,"title":{},"body":{"components/ListTaskComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/tasks/save",{"_index":716,"title":{},"body":{"components/SaveTaskComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/tasks/tasks",{"_index":791,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["src/app/shared/pages/tutorial/tutorial.component.ts",{"_index":792,"title":{},"body":{"components/TutorialComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/tutorial/tutorial.component.ts:10",{"_index":801,"title":{},"body":{"components/TutorialComponent.html":{}}}],["src/app/shared/pages/tutorial/tutorial.component.ts:13",{"_index":796,"title":{},"body":{"components/TutorialComponent.html":{}}}],["src/app/shared/pages/tutorial/tutorial.component.ts:16",{"_index":797,"title":{},"body":{"components/TutorialComponent.html":{}}}],["src/app/shared/shared",{"_index":728,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sstorage",{"_index":378,"title":{},"body":{"injectables/Connection.html":{}}}],["sstorage.ts",{"_index":430,"title":{},"body":{"injectables/ConnectionSstorage.html":{},"coverage.html":{}}}],["sstorage.ts:17",{"_index":434,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["sstorage.ts:7",{"_index":433,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["standalone",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["start",{"_index":602,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["start:number",{"_index":652,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["startcon",{"_index":565,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["startcon:number",{"_index":635,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["state",{"_index":437,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["statements",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":394,"title":{"injectables/States.html":{}},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"coverage.html":{}}}],["states.description",{"_index":767,"title":{},"body":{"injectables/Tasks.html":{}}}],["states.id",{"_index":770,"title":{},"body":{"injectables/Tasks.html":{}}}],["static",{"_index":918,"title":{},"body":{"index.html":{}}}],["status",{"_index":414,"title":{},"body":{"injectables/ConnectionDb.html":{},"components/ListTaskComponent.html":{}}}],["step",{"_index":808,"title":{},"body":{"components/TutorialComponent.html":{}}}],["stop",{"_index":655,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["storage",{"_index":281,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["stored",{"_index":439,"title":{},"body":{"injectables/ConnectionSstorage.html":{}}}],["storing",{"_index":895,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/Alerts.html":{},"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["structure",{"_index":914,"title":{},"body":{"index.html":{}}}],["strwhere",{"_index":747,"title":{},"body":{"injectables/Tasks.html":{}}}],["studio",{"_index":905,"title":{},"body":{"index.html":{}}}],["styles",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["styleurls",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["su",{"_index":1084,"title":{},"body":{"index.html":{}}}],["success",{"_index":95,"title":{},"body":{"injectables/Alerts.html":{}}}],["support",{"_index":1267,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1268,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":804,"title":{},"body":{"components/TutorialComponent.html":{},"dependencies.html":{}}}],["swiper/element/bundle",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":401,"title":{},"body":{"injectables/ConnectionDb.html":{},"coverage.html":{}}}],["tables",{"_index":391,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["tanto",{"_index":927,"title":{},"body":{"index.html":{}}}],["tarea",{"_index":1004,"title":{},"body":{"index.html":{}}}],["tareas",{"_index":934,"title":{},"body":{"index.html":{}}}],["target",{"_index":1250,"title":{},"body":{"index.html":{}}}],["task",{"_index":457,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{}}}],["task'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["task.component",{"_index":631,"title":{},"body":{"components/ListTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["task.component.html",{"_index":459,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["task.component.scss",{"_index":458,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["task.component.ts",{"_index":456,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:109",{"_index":618,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:12",{"_index":468,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["task.component.ts:128",{"_index":597,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:13",{"_index":719,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:14",{"_index":724,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:149",{"_index":578,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:16",{"_index":718,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:161",{"_index":599,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:174",{"_index":603,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:18",{"_index":623,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:19",{"_index":466,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{}}}],["task.component.ts:191",{"_index":611,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:20",{"_index":622,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:203",{"_index":615,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:21",{"_index":624,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:22",{"_index":619,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:23",{"_index":717,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:24",{"_index":621,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:27",{"_index":575,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:29",{"_index":469,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["task.component.ts:34",{"_index":720,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:36",{"_index":472,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["task.component.ts:41",{"_index":723,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:43",{"_index":617,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:45",{"_index":471,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["task.component.ts:54",{"_index":721,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:62",{"_index":722,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["task.component.ts:77",{"_index":595,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task.component.ts:91",{"_index":576,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["task/finish",{"_index":455,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["task/list",{"_index":559,"title":{},"body":{"components/ListTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["task/save",{"_index":630,"title":{},"body":{"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["taskdescription",{"_index":519,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["tasks",{"_index":406,"title":{"injectables/Tasks.html":{}},"body":{"injectables/ConnectionDb.html":{},"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SaveTaskComponent.html":{},"injectables/Tasks.html":{},"modules/TasksModule.html":{},"coverage.html":{},"index.html":{}}}],["tasks.description",{"_index":763,"title":{},"body":{"injectables/Tasks.html":{}}}],["tasks.git",{"_index":1076,"title":{},"body":{"index.html":{}}}],["tasks.id",{"_index":762,"title":{},"body":{"injectables/Tasks.html":{}}}],["tasks.id_category",{"_index":764,"title":{},"body":{"injectables/Tasks.html":{}}}],["tasks.id_state",{"_index":766,"title":{},"body":{"injectables/Tasks.html":{}}}],["tasks.observation",{"_index":765,"title":{},"body":{"injectables/Tasks.html":{}}}],["tasks/list",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tasks/tasks",{"_index":702,"title":{},"body":{"modules/PagesModule.html":{}}}],["taskser",{"_index":465,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["tasksmodule",{"_index":698,"title":{"modules/TasksModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":790,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teléfono",{"_index":1010,"title":{},"body":{"index.html":{}}}],["template",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["templateurl",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["tener",{"_index":1220,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":1090,"title":{},"body":{"index.html":{}}}],["text",{"_index":77,"title":{},"body":{"injectables/Alerts.html":{},"injectables/ConnectionDb.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["texto",{"_index":940,"title":{},"body":{"index.html":{}}}],["this.actionsheetcontroller.create",{"_index":528,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["this.alertcontroller.create",{"_index":75,"title":{},"body":{"injectables/Alerts.html":{}}}],["this.alertser.generateconfirmationalert",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["this.alertser.generatesimplealert(\"error",{"_index":428,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["this.backbuttonevent",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.categoriesser.deletecategory(id",{"_index":538,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["this.categoriesser.listcategories",{"_index":551,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.categoriesser.savecategory(this.data",{"_index":714,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["this.categoriesser.updatecategory(this.data",{"_index":715,"title":{},"body":{"components/SaveCategoryComponent.html":{}}}],["this.changefilters",{"_index":637,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.closemodal",{"_index":480,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.connection.connectdb",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.connectiondb.db.executesql(\"select",{"_index":315,"title":{},"body":{"injectables/Categories.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["this.connectiondb.db.executesql('delete",{"_index":339,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["this.connectiondb.db.executesql('insert",{"_index":318,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["this.connectiondb.db.executesql('update",{"_index":330,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["this.connectiondb.dbstorage.setitem(\"categories_tasks",{"_index":328,"title":{},"body":{"injectables/Categories.html":{}}}],["this.connectiondb.dbstorage.setitem(\"tasks_information",{"_index":344,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["this.connectiondbser.openconnectiondb",{"_index":380,"title":{},"body":{"injectables/Connection.html":{}}}],["this.connectionstorage.openconnectionstorage",{"_index":382,"title":{},"body":{"injectables/Connection.html":{}}}],["this.data.id_state",{"_index":478,"title":{},"body":{"components/FinishTaskComponent.html":{}}}],["this.db",{"_index":379,"title":{},"body":{"injectables/Connection.html":{}}}],["this.dbstorage",{"_index":381,"title":{},"body":{"injectables/Connection.html":{}}}],["this.deletecategory(data.id",{"_index":536,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["this.deletetask(data.id",{"_index":644,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.editcategory(data",{"_index":533,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["this.endcon",{"_index":647,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.filters",{"_index":651,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.finishtask(data",{"_index":643,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.initializeapp",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.listallcategories",{"_index":539,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.listalltasks(event",{"_index":650,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.listalltasks(null",{"_index":658,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.listcategories",{"_index":550,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.listcategories.filter((item",{"_index":548,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["this.listcategoriesfilter",{"_index":547,"title":{},"body":{"components/ListCategoryComponent.html":{}}}],["this.listtasks",{"_index":648,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.listtasks.push(...result",{"_index":654,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.listtasksfilter",{"_index":649,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.loading",{"_index":83,"title":{},"body":{"injectables/Alerts.html":{}}}],["this.loading.dismiss",{"_index":88,"title":{},"body":{"injectables/Alerts.html":{}}}],["this.loading.present",{"_index":87,"title":{},"body":{"injectables/Alerts.html":{}}}],["this.loadingcontroller.create",{"_index":84,"title":{},"body":{"injectables/Alerts.html":{}}}],["this.modalcontroller.create",{"_index":540,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":477,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(10",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.is('ios",{"_index":314,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["this.platform.ready().then(async",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routeroutlets?.foreach((outlet",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sqlite.create",{"_index":397,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["this.startcon",{"_index":646,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.taskser.deletetask(id",{"_index":645,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.taskser.listtasks(start",{"_index":653,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["this.taskser.savetask(this.data",{"_index":725,"title":{},"body":{"components/SaveTaskComponent.html":{}}}],["this.taskser.updatetask(this.data",{"_index":479,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/SaveTaskComponent.html":{}}}],["this.toastcontroller.create",{"_index":91,"title":{},"body":{"injectables/Alerts.html":{}}}],["time",{"_index":418,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/Tasks.html":{}}}],["tipos",{"_index":1169,"title":{},"body":{"index.html":{}}}],["title",{"_index":39,"title":{},"body":{"injectables/Alerts.html":{}}}],["titulo",{"_index":1124,"title":{},"body":{"index.html":{}}}],["toast",{"_index":90,"title":{},"body":{"injectables/Alerts.html":{}}}],["toast.present",{"_index":103,"title":{},"body":{"injectables/Alerts.html":{}}}],["toastcontroller",{"_index":19,"title":{},"body":{"injectables/Alerts.html":{}}}],["toda",{"_index":1257,"title":{},"body":{"index.html":{}}}],["tools",{"_index":1193,"title":{},"body":{"index.html":{}}}],["top",{"_index":97,"title":{},"body":{"injectables/Alerts.html":{}}}],["total",{"_index":412,"title":{},"body":{"injectables/ConnectionDb.html":{}}}],["trash",{"_index":535,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["tree",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["true",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":395,"title":{},"body":{"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{}}}],["tslib",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["tutorial.component.html",{"_index":794,"title":{},"body":{"components/TutorialComponent.html":{}}}],["tutorial.component.scss",{"_index":793,"title":{},"body":{"components/TutorialComponent.html":{}}}],["tutorial/tutorial.component",{"_index":700,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["tutorialcomponent",{"_index":203,"title":{"components/TutorialComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":25,"title":{},"body":{"injectables/Alerts.html":{},"components/AppComponent.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeaction",{"_index":542,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["ubicación",{"_index":1229,"title":{},"body":{"index.html":{}}}],["ultimo",{"_index":974,"title":{},"body":{"index.html":{}}}],["un",{"_index":937,"title":{},"body":{"index.html":{}}}],["una",{"_index":942,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":376,"title":{},"body":{"injectables/Connection.html":{}}}],["up",{"_index":609,"title":{},"body":{"components/ListTaskComponent.html":{},"injectables/Tasks.html":{}}}],["updatecategory",{"_index":271,"title":{},"body":{"injectables/Categories.html":{}}}],["updatetask",{"_index":736,"title":{},"body":{"injectables/Tasks.html":{}}}],["updating",{"_index":301,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{}}}],["url",{"_index":1098,"title":{},"body":{"index.html":{}}}],["usa",{"_index":1093,"title":{},"body":{"index.html":{}}}],["usada",{"_index":1151,"title":{},"body":{"index.html":{}}}],["usan",{"_index":965,"title":{},"body":{"index.html":{}}}],["usar",{"_index":1079,"title":{},"body":{"index.html":{}}}],["usb",{"_index":1217,"title":{},"body":{"index.html":{}}}],["use",{"_index":1252,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":470,"title":{},"body":{"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{}}}],["user",{"_index":299,"title":{},"body":{"injectables/Categories.html":{},"injectables/Tasks.html":{},"index.html":{}}}],["using",{"_index":499,"title":{},"body":{"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"index.html":{}}}],["usuario",{"_index":983,"title":{},"body":{"index.html":{}}}],["valor",{"_index":1147,"title":{},"body":{"index.html":{}}}],["value",{"_index":28,"title":{},"body":{"injectables/Alerts.html":{},"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"injectables/States.html":{},"injectables/Tasks.html":{},"components/TutorialComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":319,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/ConnectionSstorage.html":{},"injectables/Tasks.html":{}}}],["var",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["variable",{"_index":864,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variableandroid_home",{"_index":1185,"title":{},"body":{"index.html":{}}}],["variablejava_home",{"_index":1132,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1126,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["varía",{"_index":1230,"title":{},"body":{"index.html":{}}}],["veces",{"_index":1225,"title":{},"body":{"index.html":{}}}],["ventana",{"_index":1025,"title":{},"body":{"index.html":{}}}],["verbose",{"_index":1253,"title":{},"body":{"index.html":{}}}],["verificación",{"_index":1008,"title":{},"body":{"index.html":{}}}],["verificar",{"_index":1095,"title":{},"body":{"index.html":{}}}],["verification",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":896,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versión",{"_index":1150,"title":{},"body":{"index.html":{}}}],["vería",{"_index":1200,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchildren(ionrouteroutlet",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["visual",{"_index":1081,"title":{},"body":{"index.html":{}}}],["void",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/FinishTaskComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{},"components/SaveCategoryComponent.html":{},"components/SaveTaskComponent.html":{},"components/TutorialComponent.html":{}}}],["vía",{"_index":1233,"title":{},"body":{"index.html":{}}}],["want",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ListCategoryComponent.html":{},"components/ListTaskComponent.html":{}}}],["web",{"_index":919,"title":{},"body":{"index.html":{}}}],["whereconditions",{"_index":745,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditions.join",{"_index":759,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditions.length",{"_index":758,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditions.push('tasks.id_category",{"_index":756,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditions.push(`tasks.description",{"_index":753,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditionsvalue",{"_index":746,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditionsvalue.push(`%${filters.taskdescription",{"_index":754,"title":{},"body":{"injectables/Tasks.html":{}}}],["whereconditionsvalue.push(filters.idcategory",{"_index":757,"title":{},"body":{"injectables/Tasks.html":{}}}],["whether",{"_index":283,"title":{},"body":{"injectables/Categories.html":{},"injectables/ConnectionDb.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["white",{"_index":681,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["wi",{"_index":1243,"title":{},"body":{"index.html":{}}}],["width",{"_index":829,"title":{},"body":{"components/TutorialComponent.html":{}}}],["windows",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["within",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["works",{"_index":312,"title":{},"body":{"injectables/Categories.html":{},"injectables/Connection.html":{},"injectables/States.html":{},"injectables/Tasks.html":{}}}],["x",{"_index":102,"title":{},"body":{"injectables/Alerts.html":{}}}],["y",{"_index":935,"title":{},"body":{"index.html":{}}}],["ya",{"_index":1014,"title":{},"body":{"index.html":{}}}],["z",{"_index":670,"title":{},"body":{"components/ListTaskComponent.html":{}}}],["zip",{"_index":1158,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/Alerts.html":{"url":"injectables/Alerts.html","title":"injectable - Alerts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Alerts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/alerts.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeLoading\n                            \n                            \n                                generateConfirmationAlert\n                            \n                            \n                                generateLoading\n                            \n                            \n                                generateNotification\n                            \n                            \n                                generateSimpleAlert\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/alerts.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:89\n                        \n                    \n\n            \n                \n                    Close the loading modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateConfirmationAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:48\n                        \n                    \n\n            \n                \n                    Method for generating a confirmation alert\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    header\n                                                    \n                                                            Title to display\n\n                                                    \n                                            \n                                            \n                                                    message\n                                                    \n                                                            Description\n\n                                                    \n                                            \n                                            \n                                                    fnt_ok\n                                                    \n                                                            Method that will be executed when the OK button is clicked before the alert is closed.\n\n                                                    \n                                            \n                                            \n                                                    fnt_cancel\n                                                    \n                                                            Method that will be executed when the Cancel button is clicked before the alert is closed.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:78\n                        \n                    \n\n            \n                \n                    Display a modal with a loading indicator and a message while an action is being performed.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            Message to display\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:98\n                        \n                    \n\n            \n                \n                    Generate an on-screen notification with a message.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            Message to display\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateSimpleAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:23\n                        \n                    \n\n            \n                \n                    Method for generating an alert with a message\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    header\n                                                    \n                                                            Title to display\n\n                                                    \n                                            \n                                            \n                                                    message\n                                                    \n                                                            Description\n\n                                                    \n                                            \n                                            \n                                                    fnt_ok\n                                                    \n                                                            Method that will be executed when the OK button is clicked before the alert is closed.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/alerts.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Alerts {\n  loading: any;\n\n  constructor(\n    private alertController: AlertController, \n    private loadingController: LoadingController,\n    private toastController: ToastController\n  ){}\n  \n   /**\n   * Method for generating an alert with a message\n   * \n   * @param {string} header         Title to display\n   * @param {string} message    Description\n   * @param {Function} fnt_ok  Method that will be executed when the OK button is clicked before the alert is closed.\n   */\n  generateSimpleAlert = async (header: string, message: string, fnt_ok: Function = () => {}) => {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: 'Ok',\n          handler: async () => {\n            await fnt_ok();\n          }\n        }\n      ]\n    });\n  \n    await alert.present();\n  }\n\n  /**\n   * Method for generating a confirmation alert\n   * \n   * @param {string} header         Title to display\n   * @param {string} message    Description\n   * @param {Function} fnt_ok  Method that will be executed when the OK button is clicked before the alert is closed.\n   * @param {Function} fnt_cancel Method that will be executed when the Cancel button is clicked before the alert is closed.\n   */\n  generateConfirmationAlert = async (header: string, message: string, fnt_ok: Function = () => {}, fnt_cancel: Function = () => {}) => {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: 'Ok',\n          handler: async () => {\n            await fnt_ok()\n          }\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: async () => {\n            await fnt_cancel()\n          }\n        }\n      ]\n    });\n  \n    await alert.present();\n  }\n  \n  /**\n   * Display a modal with a loading indicator and a message while an action is being performed.\n   * \n   * @param {string} message    Message to display\n   */\n  generateLoading = async (message: string = \"Loading...\") => {\n    this.loading = await this.loadingController.create({\n      message,\n      spinner: 'bubbles'\n    });\n    await this.loading.present();    \n  }\n\n  /**\n   * Close the loading modal\n   */\n  closeLoading = async () => {\n    await this.loading.dismiss();\n  }\n\n  /**\n   * Generate an on-screen notification with a message.\n   * \n   * @param message Message to display\n   */\n  generateNotification = async(message: string) => {\n    const toast = await this.toastController.create({\n      message,\n      duration: 1500,\n      color: 'success',\n      position: 'top',\n      icon: 'information-circle-outline',\n      buttons: [\n        {\n          text: 'X',\n          role: 'cancel',\n          handler: () => {\n            \n          },\n        },\n      ]\n    });\n    toast.present();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backButtonSubscription\n                            \n                            \n                                    \n                                    Optional\n                                routerOutlets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backButtonEvent\n                            \n                            \n                                initializeApp\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, connection: Connection, alertSer: Alerts, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertSer\n                                                  \n                                                        \n                                                                        Alerts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backButtonEvent\n                        \n                    \n                \n            \n            \n                \nbackButtonEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Method for displaying a verification message when you want to close the application by pressing the Back button or closing modal pages and windows.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backButtonSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        routerOutlets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(IonRouterOutlet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { register } from 'swiper/element/bundle';\nimport { Platform, IonRouterOutlet  } from '@ionic/angular';\nimport { Connection } from './intranet/connection';\nimport { Alerts } from './core/services/alerts';\nimport { ViewChildren, QueryList } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nregister();\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: false,\n})\nexport class AppComponent implements OnInit {\n\n  private backButtonSubscription: any;\n  @ViewChildren(IonRouterOutlet) routerOutlets?: QueryList;\n  \n  constructor(\n    private platform: Platform,\n    private connection: Connection,\n    private alertSer: Alerts,\n    private router: Router\n  ) {\n    this.initializeApp();\n    this.backButtonEvent();\n  }\n  \n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  async ngOnInit() {}\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      await this.connection.connectDB();\n    });\n  }\n\n  /**\n   * Method for displaying a verification message when you want to close the application by pressing the Back button or closing modal pages and windows.\n   */\n  backButtonEvent() {\n    this.platform.backButton.subscribeWithPriority(10, (processNextHandler) => {\n      this.routerOutlets?.forEach((outlet: IonRouterOutlet) => {\n        if (outlet && outlet.canGoBack()) {\n          outlet.pop(); // Navigate back within the app\n        } else {\n          // Exit the app if at the root page and no more navigation history\n          this.alertSer.generateConfirmationAlert(\n            \"Confirmation\",\n            \"Do you want to exit the application?\",\n            async () => {\n              (navigator as any).app.exitApp();\n            }\n          );\n          \n        }\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared-module';\nimport { CoreModule } from './core/core-module';\nimport { SQLite } from '@awesome-cordova-plugins/sqlite/ngx';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot({\n    hardwareBackButton: true\n  }), AppRoutingModule, SharedModule, CoreModule],\n  providers: [SQLite, { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: './',\n    loadChildren: () => \"import('./shared/pages/pages-module').then( m => m.PagesModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'tasks/list',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Categories.html":{"url":"injectables/Categories.html","title":"injectable - Categories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Categories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/categories.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCategory\n                            \n                            \n                                listCategories\n                            \n                            \n                                saveCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionDB: Connection, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/categories.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionDB\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/categories.ts:96\n                        \n                    \n\n            \n                \n                    Method to remove a category from the internal database or local browser storage, depending on whether the application is running on Android, iOS, or a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            ID of the category to be deleted\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/categories.ts:20\n                        \n                    \n\n            \n                \n                    Method for listing registered categories, either from the internal database or from the browser's local storage, depending on whether the application is running on Android, iOS, or a PC browser.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/categories.ts:47\n                        \n                    \n\n            \n                \n                    Method for registering a category in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    data\n                                                    \n                                                            Object with the data sent by the user\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/categories.ts:72\n                        \n                    \n\n            \n                \n                    Method for updating data in a category, either in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    data\n                                                    \n                                                            Object with the data sent by the user\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Connection } from 'src/app/intranet/connection';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Categories {\n  \n  constructor(    \n    private connectionDB: Connection,\n    private platform: Platform,\n  ) {}\n\n  /**\n   * Method for listing registered categories, either from the internal database or from the browser's local storage, depending on whether the application is running on Android, iOS, or a PC browser.\n   * \n   * @returns Promise with the list of registered categories that match the filters sent by the user.\n   */\n  listCategories = async (): Promise => {\n    return new Promise(async (resolve) => {\n      let result:any = [];\n\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        const data = await this.connectionDB.db.executeSql(\"SELECT id, description FROM categories\", []);\n        if (data.rows.length > 0) {\n          for (let i = 0; i  => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('INSERT INTO categories (description) VALUES (?)', [data.description]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"categories_tasks\") || \"[]\")];\n        const id = result.length > 0 ? (result[result.length - 1].id + 1) : 1;\n        result.push({\n          id,\n          description: data.description\n        });\n        this.connectionDB.dbStorage.setItem(\"categories_tasks\", JSON.stringify(result));\n      }\n      resolve({});\n    });\n  }\n\n  /**\n   * \n   * Method for updating data in a category, either in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n   * \n   * @param data Object with the data sent by the user\n   * @returns Promise with the result of the action.\n   */\n  updateCategory = async (data: any): Promise => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('UPDATE categories SET description = ? WHERE id = ?', [data.description, data.id]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"categories_tasks\") || \"[]\")];\n        let find = result.find((item:any) => item.id === data.id);\n        if(find){\n          find.description = data.description\n        }\n        this.connectionDB.dbStorage.setItem(\"categories_tasks\", JSON.stringify(result));\n      }\n      resolve({});\n    });\n  }\n\n  /**\n   * \n   * Method to remove a category from the internal database or local browser storage, depending on whether the application is running on Android, iOS, or a PC browser.\n   * \n   * @param id ID of the category to be deleted\n   * @returns Promise with the result of the action.\n   */\n  deleteCategory = async (id: number): Promise => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('DELETE FROM categories WHERE id = ?', [id]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"categories_tasks\") || \"[]\")].filter((item:any) => item.id !== id);\n        this.connectionDB.dbStorage.setItem(\"categories_tasks\", JSON.stringify(result));\n\n        const resultTasks = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"tasks_information\") || \"[]\")].filter((item:any) => item.id_category !== id);\n        this.connectionDB.dbStorage.setItem(\"tasks_information\", JSON.stringify(resultTasks));\n      }\n      resolve({});\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_declarations\n\n\n\ncluster_CategoriesModule_imports\n\n\n\n\nListCategoryComponent\n\nListCategoryComponent\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nListCategoryComponent->CategoriesModule\n\n\n\n\n\nSaveCategoryComponent\n\nSaveCategoryComponent\n\nCategoriesModule -->\n\nSaveCategoryComponent->CategoriesModule\n\n\n\n\n\nCategoriesRoutingModule\n\nCategoriesRoutingModule\n\nCategoriesModule -->\n\nCategoriesRoutingModule->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/categories/categories-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ListCategoryComponent\n                        \n                        \n                            SaveCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoriesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriesRoutingModule } from './categories-routing-module';\nimport { ListCategoryComponent } from './list-category/list-category.component';\nimport { SaveCategoryComponent } from './save-category/save-category.component';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\n\n@NgModule({\n  declarations: [ListCategoryComponent, SaveCategoryComponent],\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule,\n    FormsModule,\n    IonicModule,\n  ]\n})\nexport class CategoriesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesRoutingModule.html":{"url":"modules/CategoriesRoutingModule.html","title":"module - CategoriesRoutingModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CategoriesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/categories/categories-routing-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListCategoryComponent } from './list-category/list-category.component';\nimport { SaveCategoryComponent } from './save-category/save-category.component';\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: ListCategoryComponent\n  },\n  {\n    path: 'save',\n    component: SaveCategoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/components-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Connection.html":{"url":"injectables/Connection.html","title":"injectable - Connection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Connection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/intranet/connection.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectDB\n                            \n                            \n                                db\n                            \n                            \n                                dbStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, connectionDBSer: ConnectionDb, connectionStorage: ConnectionSstorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/intranet/connection.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionDBSer\n                                                  \n                                                        \n                                                                        ConnectionDb\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionStorage\n                                                  \n                                                        \n                                                                        ConnectionSstorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectDB\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/intranet/connection.ts:23\n                        \n                    \n\n            \n                \n                    Method for connecting to the internal database if running from Android or iOS, or to local storage if running from a PC browser.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SQLiteObject\n\n                    \n                \n                \n                    \n                        Default value : null as unknown as SQLiteObject\n                    \n                \n                    \n                        \n                                Defined in src/app/intranet/connection.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                \n                    \n                        Default value : null as unknown as Storage\n                    \n                \n                    \n                        \n                                Defined in src/app/intranet/connection.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { ConnectionDb } from './connection-db';\nimport { SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\nimport { ConnectionSstorage } from './connection-sstorage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Connection {\n  db: SQLiteObject = null as unknown as SQLiteObject;\n  dbStorage: Storage = null as unknown as Storage;  \n\n  constructor(\n    private platform: Platform,\n    private connectionDBSer: ConnectionDb,\n    private connectionStorage: ConnectionSstorage\n  ){}\n\n  /**\n   * Method for connecting to the internal database if running from Android or iOS, or to local storage if running from a PC browser.\n   */\n  connectDB = async(): Promise => {\n    // Check if it works on Android, iOS, or PC.\n    if(this.platform.is('android') || this.platform.is('ios')) {\n      this.db = await this.connectionDBSer.openConnectionDB();\n    } else{\n      this.dbStorage = await this.connectionStorage.openConnectionStorage();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionDb.html":{"url":"injectables/ConnectionDb.html","title":"injectable - ConnectionDb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionDb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/intranet/connection-db.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                openConnectionDB\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sqlite: SQLite, alertSer: Alerts)\n                    \n                \n                        \n                            \n                                Defined in src/app/intranet/connection-db.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sqlite\n                                                  \n                                                        \n                                                                    SQLite\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertSer\n                                                  \n                                                        \n                                                                        Alerts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        openConnectionDB\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/intranet/connection-db.ts:19\n                        \n                    \n\n            \n                \n                    Method to connect to the internal database if running on Android or iOS. It also initializes values if they have not been created. Tables are created if they do not exist, and initial values are created for the states.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\nimport { Alerts } from '../core/services/alerts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionDb {\n\n  constructor(\n    private sqlite: SQLite,\n    private alertSer: Alerts,\n  ) {}\n  \n  /**\n   * Method to connect to the internal database if running on Android or iOS. It also initializes values if they have not been created. Tables are created if they do not exist, and initial values are created for the states.\n   * @returns Promise with the object created in the connection.\n   */\n  openConnectionDB = async (): Promise => {\n    return new Promise(async (resolve) => {\n      try {\n        const db:SQLiteObject = await this.sqlite.create({\n          name: 'mydata.db',\n          location: 'default'\n        });\n        \n        if (db) { \n          try {\n            await db.executeSql('CREATE TABLE IF NOT EXISTS states (id INTEGER PRIMARY KEY, description TEXT)', []);\n            await db.executeSql('CREATE TABLE IF NOT EXISTS categories (id INTEGER PRIMARY KEY, description TEXT)', []);\n            await db.executeSql('CREATE TABLE IF NOT EXISTS tasks (id INTEGER PRIMARY KEY, description TEXT, observation TEXT, id_category INTEGER, id_state INTEGER)', []);\n            \n            const data = await db.executeSql(\"SELECT COUNT(id) AS total FROM states\", []);\n\n            // Checks whether status values exist in the internal database to register them. This occurs when the application is opened for the first time.\n            if (data.rows.item(0).total === 0) {\n              await db.executeSql('INSERT INTO states (id, description) VALUES (?,?)', [1, 'Active']);\n              await db.executeSql('INSERT INTO states (id, description) VALUES (?,?)', [2, 'Completed']);\n            }\n            resolve(db);          \n          } catch (e) {\n            resolve(null)\n          }\n        } else {\n          this.alertSer.generateSimpleAlert(\"Error\", 'Error generating the database');\n          resolve(null)\n        }\n      } catch (e) {\n        this.alertSer.generateSimpleAlert(\"Error\", 'Error generating the database');\n        resolve(null)\n      }\n    });\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionSstorage.html":{"url":"injectables/ConnectionSstorage.html","title":"injectable - ConnectionSstorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionSstorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/intranet/connection-sstorage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                openConnectionStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertSer: Alerts)\n                    \n                \n                        \n                            \n                                Defined in src/app/intranet/connection-sstorage.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertSer\n                                                  \n                                                        \n                                                                        Alerts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        openConnectionStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/intranet/connection-sstorage.ts:17\n                        \n                    \n\n            \n                \n                    Method for connecting to local storage if running from a PC browser. In addition, values are initialized if they have not been created, and initial state values are created.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alerts } from '../core/services/alerts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionSstorage {\n  \n  constructor(\n    private alertSer: Alerts,\n  ) {}\n  \n  /**\n   * Method for connecting to local storage if running from a PC browser. In addition, values are initialized if they have not been created, and initial state values are created.\n   * @returns Promise with locally stored data\n   */\n  openConnectionStorage = async (): Promise => {\n    return new Promise(async (resolve) => {\n      try {\n        const db: Storage = localStorage;\n        const states: any = [\n          {\n            id: 1,\n            description: 'Active'\n          },\n          {\n            id: 2,\n            description: 'Completed'\n          }\n        ]\n\n        // Check if the values exist in the browser's local storage to initialize them. This occurs when the application is opened for the first time.\n        if(db.getItem(\"states_general\") === '[]' || db.getItem(\"states_general\") === null){\n          db.setItem(\"states_general\", JSON.stringify(states));\n        }\n        if(db.getItem(\"categories_tasks\") === '[]' || db.getItem(\"categories_tasks\") === null){\n          db.setItem(\"categories_tasks\", JSON.stringify([]));\n        }\n        if(db.getItem(\"tasks_information\") === '[]' || db.getItem(\"tasks_information\") === null){\n          db.setItem(\"tasks_information\", JSON.stringify([]));\n        }\n        resolve(db);     \n      } catch (e) {\n        this.alertSer.generateSimpleAlert(\"Error\", 'Error generating the database');\n        resolve(null)\n      }\n    });\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FinishTaskComponent.html":{"url":"components/FinishTaskComponent.html","title":"component - FinishTaskComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FinishTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/tasks/finish-task/finish-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-finish-task\n            \n\n\n\n            \n                styleUrls\n                ./finish-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./finish-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveDataTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, taskSer: Tasks)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/tasks/finish-task/finish-task.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskSer\n                                                  \n                                                        \n                                                                        Tasks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     { id: number; description: string; id_category: string; id_state: number; observation: string; description_state: string; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    description: '',\n    id_category: '',\n    id_state: 2,\n    observation: '',\n    description_state: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pages/tasks/finish-task/finish-task.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/finish-task/finish-task.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Method for the component used as modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/finish-task/finish-task.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDataTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDataTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/finish-task/finish-task.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Tasks } from 'src/app/core/services/tasks';\n\n@Component({\n  selector: 'app-finish-task',\n  templateUrl: './finish-task.component.html',\n  styleUrls: ['./finish-task.component.scss'],\n  standalone: false,\n})\nexport class FinishTaskComponent  implements OnInit {\n  @Input() data = {\n    id: 0,\n    description: '',\n    id_category: '',\n    id_state: 2,\n    observation: '',\n    description_state: ''\n  }\n\n  constructor(\n    private modalController: ModalController,\n    private taskSer: Tasks\n  ) { }\n\n   /**\n   * Method for the component used as modal\n   */\n  closeModal(){\n    this.modalController.dismiss();\n  }\n\n  /**\n   * Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n   */\n  async saveDataTask(){\n    this.data.id_state = 2;\n    await this.taskSer.updateTask(this.data);\n    this.closeModal();\n  }\n\n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Finish the task\n    \n      Save\n    \n  \n\n\n\n  \n    \n      {{ data.description }}\n      {{ data.description_state }}\n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./finish-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Finish the task          Save                  {{ data.description }}      {{ data.description_state }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FinishTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListCategoryComponent.html":{"url":"components/ListCategoryComponent.html","title":"component - ListCategoryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ListCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/categories/list-category/list-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-category\n            \n\n\n\n            \n                styleUrls\n                ./list-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                listCategories\n                            \n                            \n                                listCategoriesFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCategory\n                            \n                            \n                                changeFilters\n                            \n                            \n                                closeModal\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                    Async\n                                listAllCategories\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                selectCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertSer: Alerts, modalController: ModalController, actionSheetController: ActionSheetController, categoriesSer: Categories)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertSer\n                                                  \n                                                        \n                                                                        Alerts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionSheetController\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesSer\n                                                  \n                                                        \n                                                                        Categories\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    addCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Method to display the component for creating a category as a modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeFilters\n                        \n                    \n                \n            \n            \n                \nchangeFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Method for listing categories using filter data (search by description) or listing registered categories.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Method for the component used as modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Method for deleting a selected category. A confirmation message is generated before performing this action.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    Category ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Method to display the category editing component as a modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAllCategories(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Method for listing categories\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Method for generating a list of options when a category is selected from the list displayed in the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    taskDescription: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listCategoriesFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/categories/list-category/list-category.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Alerts } from 'src/app/core/services/alerts';\nimport { SaveCategoryComponent } from '../save-category/save-category.component';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { Categories } from 'src/app/core/services/categories';\n\n@Component({\n  selector: 'app-list-category',\n  templateUrl: './list-category.component.html',\n  styleUrls: ['./list-category.component.scss'],\n  standalone: false,\n})\nexport class ListCategoryComponent  implements OnInit {\n  listCategories:any = [];\n  listCategoriesFilter:any = [];\n\n  filters = {\n    taskDescription: ''\n  }\n\n  constructor(\n    private alertSer: Alerts,\n    private modalController: ModalController,\n    private actionSheetController: ActionSheetController,\n    private categoriesSer: Categories\n  ) { }\n\n  /**\n   * Method for the component used as modal\n   */\n  closeModal(){\n    this.modalController.dismiss();\n  }\n\n  /**\n   * Method for generating a list of options when a category is selected from the list displayed in the component.\n   */\n  async selectCategory(data: any){\n    const actionSheet = await this.actionSheetController.create({\n      //header: 'Category',\n      cssClass: 'my-custom-class',\n      mode: 'ios',\n      buttons: [\n        {\n          text: 'Edit',\n          icon: 'pencil',\n          handler: () => {\n            this.editCategory(data);\n          },\n        },\n        {\n          text: 'Delete',\n          icon: 'trash',\n          handler: async () => {\n            await this.deleteCategory(data.id);\n          },\n        },        \n      ],\n    });\n    await actionSheet.present();\n  }\n\n  /**\n   * Method for deleting a selected category. A confirmation message is generated before performing this action.\n   * \n   * @param id Category ID\n   */\n  deleteCategory(id: number = 0){\n    this.alertSer.generateConfirmationAlert(\n      \"Confirmation\",\n      \"Do you want to delete this category?\",\n      async () => {\n        this.categoriesSer.deleteCategory(id);\n        await this.listAllCategories();\n      }\n    )\n  }\n\n  /**\n   * Method to display the category editing component as a modal.\n   */\n  async editCategory(data: any) {\n    const modal = await this.modalController.create(\n      {\n        component: SaveCategoryComponent,\n        componentProps: {\n          typeAction: 'edit',\n          data\n        }\n\n      }\n    );\n    modal.present();\n    modal.onDidDismiss().then(async (data) => {\n      await this.listAllCategories();\n    })\n  }\n\n  /**\n   * Method to display the component for creating a category as a modal.\n   */\n  async addCategory(id: number = 0) {\n    const modal = await this.modalController.create(\n      {\n        component: SaveCategoryComponent,\n        componentProps: {\n          typeAction: 'create'\n        }\n      }\n    );\n    modal.present();\n    modal.onDidDismiss().then(async (data) => {\n      await this.listAllCategories();\n    })\n  }\n\n  /**\n   * Method for listing categories using filter data (search by description) or listing registered categories. \n   * \n   */\n  changeFilters() {\n    if(this.filters.taskDescription !== ''){\n      this.listCategoriesFilter = this.listCategories.filter((item: any) => item.description.toLowerCase().includes(this.filters.taskDescription.toLowerCase()));\n    } else{\n      this.listCategoriesFilter = [...this.listCategories]\n    }\n  }\n\n  /**\n   * Method for listing categories\n   */\n  async listAllCategories(event: any = null) {\n    const result = await this.categoriesSer.listCategories(); \n    this.listCategories = [...result];\n    this.listCategoriesFilter = [...this.listCategories];\n    if(event){\n      event.target.complete(); // End the refreshing process\n    }\n  }\n\n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  async ngOnInit() {\n    await this.listAllCategories();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Categories\n  \n\n\n\n  \n    \n      Categories      \n    \n  \n\n  \n\n    \n      \n        \n          \n        \n      \n    \n    \n    \n\n      \n        \n          \n          \n        \n\n        \n          {{ item.description }}\n        \n      \n    \n    \n\n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./list-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Categories              Categories                                                                                                                                {{ item.description }}                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListTaskComponent.html":{"url":"components/ListTaskComponent.html","title":"component - ListTaskComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ListTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/tasks/list-task/list-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-task\n            \n\n\n\n            \n                styleUrls\n                ./list-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endCon\n                            \n                            \n                                filters\n                            \n                            \n                                listCategories\n                            \n                            \n                                listTasks\n                            \n                            \n                                listTasksFilter\n                            \n                            \n                                startCon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTask\n                            \n                            \n                                    Async\n                                changeFilters\n                            \n                            \n                                deleteTask\n                            \n                            \n                                    Async\n                                finishTask\n                            \n                            \n                                    Async\n                                listAllCategories\n                            \n                            \n                                    Async\n                                listAllTasks\n                            \n                            \n                                    Async\n                                loadData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                selectTask\n                            \n                            \n                                    Async\n                                showCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertSer: Alerts, modalController: ModalController, actionSheetController: ActionSheetController, categoriesSer: Categories, taskSer: Tasks, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertSer\n                                                  \n                                                        \n                                                                        Alerts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionSheetController\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesSer\n                                                  \n                                                        \n                                                                        Categories\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskSer\n                                                  \n                                                        \n                                                                        Tasks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Method to display the component for creating a task as a modal.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeFilters\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeFilters(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Method for listing tasks using filter data (search by description or category) or listing registered tasks. This list is paginated, which means that 10 tasks are generated per page, depending on the page. In this case, it is from the first page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    Object with infinite scroll data that allows pagination, i.e., moving from one page to another, or the refresh button that allows the data to be displayed again.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Method for deleting a selected task. A confirmation message is generated before performing this action.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    Task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        finishTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    finishTask(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Method to display the task completion component as a modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Method for enumerating data filter categories\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAllTasks(event: any, start: number, end: number, filters: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Method for listing tasks using filter data (search by description or category) or listing registered tasks. This list is paginated, which means that 10 tasks are generated per page, depending on the page. In this case, it is dynamic from where the data loading begins to where it ends.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    Object with infinite scroll data that allows pagination, i.e., moving from one page to another, or refresh, which allows the data to be displayed again.\n\n                                            \n                                        \n                                        \n                                                start\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    Initial value from which the data for pagination is obtained.\n\n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    Final value up to which data is obtained for pagination.\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    Object with filter data to generate the list\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadData(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Method for paginating data that runs with Ionic's infinite scroll component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object with infinite scroll data that allows pagination, i.e., moving from one page to another.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectTask(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Method for generating a list of options when a task is selected from the list displayed in the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    showCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Method to display the category list component as a modal\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endCon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    taskDescription: '',\n    idCategory: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTasksFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startCon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/list-task/list-task.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterContentChecked, AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnChanges, OnInit } from '@angular/core';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { Alerts } from 'src/app/core/services/alerts';\nimport { SaveTaskComponent } from '../save-task/save-task.component';\nimport { FinishTaskComponent } from '../finish-task/finish-task.component';\nimport { Categories } from 'src/app/core/services/categories';\nimport { Tasks } from 'src/app/core/services/tasks';\nimport { ListCategoryComponent } from '../../categories/list-category/list-category.component';\n\n@Component({\n  selector: 'app-list-task',\n  templateUrl: './list-task.component.html',\n  styleUrls: ['./list-task.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  standalone: false,\n})\nexport class ListTaskComponent implements OnInit {\n  listTasks:any = [];\n  listTasksFilter:any = [];\n  listCategories:any = [];\n  startCon:number = 0;\n  endCon:number = 10;\n\n  filters = {\n    taskDescription: '',\n    idCategory: \"\"\n  }\n\n  constructor(\n    private alertSer: Alerts,\n    private modalController: ModalController,\n    private actionSheetController: ActionSheetController,\n    private categoriesSer: Categories,\n    private taskSer: Tasks,\n    private cdRef: ChangeDetectorRef,\n  ) { \n    this.changeFilters();\n  }\n\n  /**\n   * Method for generating a list of options when a task is selected from the list displayed in the component.\n   */\n  async selectTask(data: any){\n    const buttons = [];\n    \n    // Check if the task status is different from 2, i.e., if it is not completed, so as not to generate this option.\n    if(data.id_state !== 2){\n      buttons.push({\n        text: 'Finish',\n        icon: 'checkmark-outline',\n        handler: async () => {\n          this.finishTask(data);\n        },\n      })\n    }\n    buttons.push({\n      text: 'Delete',\n      icon: 'trash',\n      handler: async () => {\n        await this.deleteTask(data.id);\n      },\n    });\n\n    const actionSheet = await this.actionSheetController.create({\n      cssClass: 'my-custom-class',\n      mode: 'ios',\n      buttons\n    });\n    await actionSheet.present();\n  }\n\n  /**\n   * Method for deleting a selected task. A confirmation message is generated before performing this action.\n   * \n   * @param id Task ID\n   */\n  deleteTask(id: number = 0){\n    this.alertSer.generateConfirmationAlert(\n      \"Confirmation\",\n      \"Do you want to delete this task?\",\n      async () => {\n        this.taskSer.deleteTask(id);\n        this.changeFilters();\n      }\n    )\n  }\n  \n  /**\n   * Method to display the component for creating a task as a modal.\n   */\n  async addTask() {\n    const modal = await this.modalController.create(\n      {\n        component: SaveTaskComponent,\n        componentProps: {\n          typeAction: 'create'\n        }\n      }\n    );\n    modal.present();\n    modal.onDidDismiss().then(async (data) => {\n      this.changeFilters();\n    });\n  }\n  \n  /**\n   * Method to display the category list component as a modal\n   */\n  async showCategories() {\n    const modal = await this.modalController.create(\n      {\n        component: ListCategoryComponent,\n        componentProps: {\n        }\n      }\n    );\n    \n    modal.present();\n    modal.onDidDismiss().then(async (data) => {\n      await this.listAllCategories();\n      await this.changeFilters();\n    });\n  }\n\n  /**\n   * Method to display the task completion component as a modal.\n   */\n  async finishTask(data: any) {\n    const modal = await this.modalController.create(\n      {\n        component: FinishTaskComponent,\n        componentProps: {\n          typeAction: 'create',\n          data,\n        }\n      }\n    );\n    modal.present();\n    modal.onDidDismiss().then(async (data) => {\n      this.changeFilters();\n    });\n  }\n\n  /**\n   * Method for listing tasks using filter data (search by description or category) or listing registered tasks. This list is paginated, which means that 10 tasks are generated per page, depending on the page. In this case, it is from the first page.\n   * \n   * @param event Object with infinite scroll data that allows pagination, i.e., moving from one page to another, or the refresh button that allows the data to be displayed again.\n   */\n  async changeFilters(event: any = null) {\n    this.startCon = 0;\n    this.endCon = 10;    \n    this.listTasks = [...[]];    \n    this.listTasksFilter = [...[]];\n\n    await this.listAllTasks(event, this.startCon, this.endCon, this.filters)\n  }\n\n  /**\n   * Method for enumerating data filter categories\n   */\n  async listAllCategories() {\n    const result = await this.categoriesSer.listCategories(); \n    this.listCategories = [...result];\n  }\n\n  /**\n   * Method for listing tasks using filter data (search by description or category) or listing registered tasks. This list is paginated, which means that 10 tasks are generated per page, depending on the page. In this case, it is dynamic from where the data loading begins to where it ends. \n   * \n   * @param event Object with infinite scroll data that allows pagination, i.e., moving from one page to another, or refresh, which allows the data to be displayed again.\n   * @param start Initial value from which the data for pagination is obtained.\n   * @param end Final value up to which data is obtained for pagination.\n   * @param filters Object with filter data to generate the list\n   */\n  async listAllTasks(event: any = null, start:number = 0, end: number = 0, filters: any = {}) {\n    const result = await this.taskSer.listTasks(start, end, filters);\n    this.listTasks.push(...result);\n    this.listTasksFilter = [...this.listTasks];\n    await this.listAllCategories();\n    \n    // Stop infinite scroll or refresh effect\n    if(event){\n      event.target.complete(); \n    }\n  }\n\n  /**\n   * Method for paginating data that runs with Ionic's infinite scroll component.\n   * \n   * @param event Object with infinite scroll data that allows pagination, i.e., moving from one page to another. \n   */\n  async loadData(event:any) {    \n    if(event){\n      event.target.complete(); // End the refreshing process\n      this.startCon += 10;\n      this.endCon += 10;\n      await this.listAllTasks(null, this.startCon, this.endCon, this.filters)\n    }\n  }\n\n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  async ngOnInit() {\n    \n  }\n\n}\n\n    \n\n    \n        \n  \n    Tasks\n  \n\n\n\n  \n    \n      Tasks\n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Category\n          \n            Select...\n            {{ item.description }}\n          \n        \n      \n    \n\n    \n\n      \n        \n          \n          \n        \n\n        \n          {{ item.description }}\n          {{ item.description_state }}\n        \n      \n    \n    \n\n    \n      \n      \n    \n\n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./list-task.component.scss\n                \n                ion-fab-button[data-desc] {\n    position: relative;\n  }\n  \n  ion-fab-button[data-desc]::after {\n    position: absolute;\n    content: attr(data-desc);\n    z-index: 1;\n    right: 55px;\n    bottom: 4px;\n    background-color: var(--ion-color-primary);\n    padding: 9px;\n    border-radius: 15px;\n    color: white;\n    box-shadow: 0 3px 5px -1px rgba(0,0,0,0.2), 0 6px 10px 0 rgba(0,0,0,0.14), 0 1px 18px 0 rgba(0,0,0,0.12);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tasks              Tasks                                                              Category                      Select...            {{ item.description }}                                                                                            {{ item.description }}          {{ item.description_state }}                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_PagesModule_declarations\n\n\n\n\nTutorialComponent\n\nTutorialComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nTutorialComponent->PagesModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nPagesModule -->\n\nCategoriesModule->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nPagesModule -->\n\nTasksModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/pages-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TutorialComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoriesModule\n                        \n                        \n                            PagesRoutingModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from './pages-routing-module';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TutorialComponent } from './tutorial/tutorial.component';\nimport { CategoriesModule } from './categories/categories-module';\nimport { TasksModule } from './tasks/tasks-module';\n\n\n@NgModule({\n  declarations: [TutorialComponent],\n  imports: [\n    PagesRoutingModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CategoriesModule,\n    TasksModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/pages-routing-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TutorialComponent } from './tutorial/tutorial.component';\n\nconst routes: Routes = [\n  {\n    path: 'categories',\n    loadChildren: () => \"import('./categories/categories-module').then( m => m.CategoriesModule)\"\n  },\n  {\n    path: 'tasks',\n    loadChildren: () => \"import('./tasks/tasks-module').then( m => m.TasksModule)\"\n  },\n  {\n    path: 'tutorial',\n    component: TutorialComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveCategoryComponent.html":{"url":"components/SaveCategoryComponent.html","title":"component - SaveCategoryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SaveCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/categories/save-category/save-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-save-category\n            \n\n\n\n            \n                styleUrls\n                ./save-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./save-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveDataCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                typeAction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, categoriesSer: Categories)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesSer\n                                                  \n                                                        \n                                                                        Categories\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     { id: number; description: string; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    description: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeAction\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"create\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Method for the component used as modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDataCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDataCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/categories/save-category/save-category.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Categories } from 'src/app/core/services/categories';\n\n@Component({\n  selector: 'app-save-category',\n  templateUrl: './save-category.component.html',\n  styleUrls: ['./save-category.component.scss'],\n  standalone: false,\n})\nexport class SaveCategoryComponent  implements OnInit {\n  @Input() typeAction = \"create\";\n\n  @Input() data = {\n    id: 0,\n    description: ''\n  }\n\n  constructor(\n    private modalController: ModalController,\n    private categoriesSer: Categories\n  ) { }\n\n   /**\n   * Method for the component used as modal\n   */\n  closeModal(){\n    this.modalController.dismiss();\n  }\n\n  /**\n   * Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n   */\n  async saveDataCategory(){\n    if(this.typeAction === 'create'){\n      await this.categoriesSer.saveCategory(this.data);\n    } else {\n      await this.categoriesSer.updateCategory(this.data);\n    }\n    \n    this.closeModal();\n  }\n\n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  ngOnInit() {\n    \n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Category\n    \n      Save\n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./save-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Category          Save                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveTaskComponent.html":{"url":"components/SaveTaskComponent.html","title":"component - SaveTaskComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SaveTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/tasks/save-task/save-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-save-task\n            \n\n\n\n            \n                styleUrls\n                ./save-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./save-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listCategories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                    Async\n                                listAllCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveDataTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                typeAction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, categoriesSer: Categories, taskSer: Tasks)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesSer\n                                                  \n                                                        \n                                                                        Categories\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskSer\n                                                  \n                                                        \n                                                                        Tasks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     { id: number; description: string; id_category: string; id_state: number; observation: string; description_state: string; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    description: '',\n    id_category: '',\n    id_state: 1,\n    observation: '',\n    description_state: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeAction\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"create\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Method for the component used as modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Method for listing all categories\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Event to execute instructions when the component is loaded.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDataTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDataTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        listCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tasks/save-task/save-task.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Categories } from 'src/app/core/services/categories';\nimport { Tasks } from 'src/app/core/services/tasks';\n\n@Component({\n  selector: 'app-save-task',\n  templateUrl: './save-task.component.html',\n  styleUrls: ['./save-task.component.scss'],\n  standalone: false,\n})\nexport class SaveTaskComponent  implements OnInit {\n  @Input() typeAction = \"create\";\n  listCategories:any = []\n\n  @Input() data = {\n    id: 0,\n    description: '',\n    id_category: '',\n    id_state: 1,\n    observation: '',\n    description_state: ''\n  }\n\n  constructor(\n    private modalController: ModalController,\n    private categoriesSer: Categories,\n    private taskSer: Tasks\n  ) { }\n\n  /**\n   * Method for the component used as modal\n   */\n  closeModal() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * Method for sending and saving data to the internal database or local storage, depending on where the application is running.\n   */\n  async saveDataTask() {\n    if(this.typeAction === 'create'){\n      await this.taskSer.saveTask(this.data);\n    } else {\n      await this.taskSer.updateTask(this.data);\n    }\n    \n    this.closeModal();\n  }\n\n  /**\n   * Method for listing all categories\n   */\n  async listAllCategories() {\n    const result = await this.categoriesSer.listCategories(); \n    this.listCategories = [...result];\n  }\n\n  /**\n   * Event to execute instructions when the component is loaded.\n   */\n  ngOnInit() {    \n    this.listAllCategories()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Task\n    \n      Save\n    \n  \n\n\n\n  \n    \n      \n    \n    \n      Category\n      \n        Select...\n        {{ item.description }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./save-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Task          Save                                Category              Select...        {{ item.description }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nPagesModule\n\nPagesModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPagesModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PagesModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagesModule } from './pages/pages-module';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    PagesModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/States.html":{"url":"injectables/States.html","title":"injectable - States","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  States\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/states.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listAllStates\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionDB: Connection, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/states.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionDB\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        listAllStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/states.ts:20\n                        \n                    \n\n            \n                \n                    Method for enumerating states, either from the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Connection } from 'src/app/intranet/connection';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class States {\n  \n  constructor(    \n    private connectionDB: Connection,\n    private platform: Platform,\n  ) {}\n\n  /**\n   * Method for enumerating states, either from the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n   * \n   * @returns Promise with the list of registered states\n   */\n  listAllStates = async (): Promise => {\n    return new Promise(async (resolve) => {\n      let result:any = [];\n      \n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        const data = await this.connectionDB.db.executeSql(\"SELECT id, description FROM states\", []);\n        if (data.rows.length > 0) {\n          for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Tasks.html":{"url":"injectables/Tasks.html","title":"injectable - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/tasks.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                listTasks\n                            \n                            \n                                saveTask\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionDB: Connection, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/tasks.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionDB\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/tasks.ts:139\n                        \n                    \n\n            \n                \n                    Method to delete a task from the internal database or local browser storage, depending on whether the application is running on Android, iOS, or a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            ID of the task to be deleted\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/tasks.ts:23\n                        \n                    \n\n            \n                \n                    Method for listing registered tasks, either from the internal database or from the browser's local storage, depending on whether the application is running on Android, iOS, or a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    start\n                                                    \n                                                            Initial value from which records are obtained.\n\n                                                    \n                                            \n                                            \n                                                    end\n                                                    \n                                                            Final value up to which records are obtained\n\n                                                    \n                                            \n                                            \n                                                    filters\n                                                    \n                                                            Object with the data of the filters to be executed, only if sent.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/tasks.ts:89\n                        \n                    \n\n            \n                \n                    Method for recording a task in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    data\n                                                    \n                                                            Object with the data sent by the user\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/tasks.ts:114\n                        \n                    \n\n            \n                \n                    Method for updating task data, either in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    data\n                                                    \n                                                            Object with the data sent by the user\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Connection } from 'src/app/intranet/connection';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Tasks {\n  \n  constructor(    \n    private connectionDB: Connection,\n    private platform: Platform,\n  ) {}\n\n  /**\n   * Method for listing registered tasks, either from the internal database or from the browser's local storage, depending on whether the application is running on Android, iOS, or a PC browser.\n   * \n   * @param start Initial value from which records are obtained.\n   * @param end Final value up to which records are obtained\n   * @param filters Object with the data of the filters to be executed, only if sent.\n   * @returns Promise with the list of registered tasks that meet the filters sent by the user.\n   */\n  listTasks = async (start:number = 0, end: number = 0, filters: any = {}): Promise => {\n    return new Promise(async (resolve) => {\n      let result:any = [];\n\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        let whereConditions = [];\n        let whereConditionsValue = [];\n        let strWhere = '';\n\n        // Apply filters if the data is sent in the object. All settings are generated to be added to the data query.\n        if(filters.taskDescription !== ''){\n          whereConditions.push(`tasks.description LIKE ?`);\n          whereConditionsValue.push(`%${filters.taskDescription}%`);\n        }\n        if(filters.idCategory !== ''){\n          whereConditions.push('tasks.id_category = ?');\n          whereConditionsValue.push(filters.idCategory);\n        }\n        strWhere = whereConditions.length > 0 ? ` WHERE ${whereConditions.join(\" AND \")}` : '';\n\n        // Data pagination so that not all records are displayed, but only 10 at a time.\n        strWhere += ` LIMIT ${end - start} OFFSET ${start}`;\n\n        const data = await this.connectionDB.db.executeSql(\"SELECT tasks.id, tasks.description, tasks.id_category, tasks.observation, tasks.id_state, states.description AS description_state FROM tasks INNER JOIN states ON states.id = tasks.id_state INNER JOIN categories ON categories.id = tasks.id_category \" + strWhere, whereConditionsValue);\n\n        if (data.rows.length > 0) {\n          for (let i = 0; i  item.description.toLowerCase().includes(filters.taskDescription.toLowerCase()) && item.id_category === filters.idCategory);\n        } else if(filters.taskDescription !== '' && filters.idCategory === '') {\n          result = result.filter((item:any) => item.description.toLowerCase().includes(filters.taskDescription.toLowerCase()));\n        } else if(filters.taskDescription === '' && filters.idCategory !== '') {\n          result = result.filter((item:any) => item.id_category === filters.idCategory);\n        }\n        \n        // Data pagination so that not all records are displayed, but only 10 at a time.\n        if(start > 0 || end > 0){\n          result =  result.slice(start, end);\n        }\n        const listStates = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"states_general\") || \"[]\")];\n\n        for (let i = 0; i  item.id === result[i].id_state);          \n          result[i].description_state = (find) ? find.description : \"\";\n        }\n      }\n      resolve(result);\n    });\n  }\n\n  /**\n   * \n   * Method for recording a task in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n   * \n   * @param data Object with the data sent by the user\n   * @returns Promise with the result of the action.\n   */\n  saveTask = async (data: any): Promise => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('INSERT INTO tasks (description, id_category, observation, id_state) VALUES (?, ?, ?, ?)', [data.description, data.id_category, data.observation, data.id_state]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"tasks_information\") || \"[]\")];\n        const id = result.length > 0 ? (result[result.length - 1].id + 1) : 1;\n        result.push({\n          ...data,\n          id,\n        });\n        this.connectionDB.dbStorage.setItem(\"tasks_information\", JSON.stringify(result));\n      }\n      resolve({});\n    });\n  }\n\n  /**\n   * \n   * Method for updating task data, either in the internal database or in the browser's local storage, depending on whether the application is running on Android, iOS, or in a PC browser.\n   * \n   * @param data Object with the data sent by the user\n   * @returns Promise with the result of the action.\n   */\n  updateTask = async (data: any): Promise => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('UPDATE tasks SET observation = ?, id_state = ? WHERE id = ?', [data.observation, data.id_state, data.id]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"tasks_information\") || \"[]\")];\n        let find = result.find((item:any) => item.id === data.id);\n        if(find){\n          find.observation = data.observation;\n          find.id_state = data.id_state;\n        }\n        this.connectionDB.dbStorage.setItem(\"tasks_information\", JSON.stringify(result));\n      }\n      resolve({});\n    });\n  }\n\n  /**\n   * \n   * Method to delete a task from the internal database or local browser storage, depending on whether the application is running on Android, iOS, or a PC browser.\n   * \n   * @param id ID of the task to be deleted\n   * @returns Promise with the result of the action.\n   */\n  deleteTask = async (id: number): Promise => {\n    return new Promise(async (resolve) => {\n      // Check if it works on Android, iOS, or PC.\n      if(this.platform.is('android') || this.platform.is('ios')) {\n        await this.connectionDB.db.executeSql('DELETE FROM tasks WHERE id = ?', [id]);\n      } else {         \n        const result = [...JSON.parse(this.connectionDB.dbStorage.getItem(\"tasks_information\") || \"[]\")].filter((item:any) => item.id !== id);\n        this.connectionDB.dbStorage.setItem(\"tasks_information\", JSON.stringify(result));\n      }\n      resolve({});\n    });\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nFinishTaskComponent\n\nFinishTaskComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nFinishTaskComponent->TasksModule\n\n\n\n\n\nListTaskComponent\n\nListTaskComponent\n\nTasksModule -->\n\nListTaskComponent->TasksModule\n\n\n\n\n\nSaveTaskComponent\n\nSaveTaskComponent\n\nTasksModule -->\n\nSaveTaskComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/tasks/tasks-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FinishTaskComponent\n                        \n                        \n                            ListTaskComponent\n                        \n                        \n                            SaveTaskComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TasksRoutingModule } from './tasks-routing-module';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ListTaskComponent } from './list-task/list-task.component';\nimport { SaveTaskComponent } from './save-task/save-task.component';\nimport { FinishTaskComponent } from './finish-task/finish-task.component';\n\n\n@NgModule({\n  declarations: [ListTaskComponent, SaveTaskComponent, FinishTaskComponent],\n  imports: [\n    CommonModule,\n    TasksRoutingModule,\n    FormsModule,\n    IonicModule,\n  ]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pages/tasks/tasks-routing-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListTaskComponent } from './list-task/list-task.component';\nimport { SaveTaskComponent } from './save-task/save-task.component';\nimport { FinishTaskComponent } from './finish-task/finish-task.component';\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: ListTaskComponent\n  },\n  {\n    path: 'save',\n    component: SaveTaskComponent\n  },\n  {\n    path: 'finish',\n    component: FinishTaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TutorialComponent.html":{"url":"components/TutorialComponent.html","title":"component - TutorialComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TutorialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/tutorial/tutorial.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tutorial\n            \n\n\n\n            \n                styleUrls\n                ./tutorial.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tutorial.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                slideOpts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/tutorial/tutorial.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/tutorial/tutorial.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        slideOpts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    initialSlide: 1,\n    speed: 400,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/tutorial/tutorial.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.scss'],\n  standalone: false,\n})\nexport class TutorialComponent  implements OnInit {\n  slideOpts = {\n    initialSlide: 1,\n    speed: 400,\n  };\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  \n    Header\n  \n\n\n\n  \n    Slide 1\n    Slide 2\n    Slide 3\n  \n\n    \n\n    \n                \n                    ./tutorial.component.scss\n                \n                swiper-container {\n    --swiper-pagination-bullet-inactive-color: var(--ion-text-color-step-800, #cccccc);\n    --swiper-pagination-color: var(--ion-color-primary, #0054e9);\n    --swiper-pagination-progressbar-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.25);\n    --swiper-scrollbar-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);\n    --swiper-scrollbar-drag-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.5);\n  }\n  \n  swiper-slide {\n    display: flex;\n    position: relative;\n  \n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n  \n    width: 100%;\n    height: 100%;\n  \n    font-size: 18px;\n  \n    text-align: center;\n    box-sizing: border-box;\n  }\n  \n  swiper-slide img {\n    width: auto;\n    max-width: 100%;\n    height: auto;\n    max-height: 100%;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Header        Slide 1    Slide 2    Slide 3  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FinishTaskComponent', 'selector': 'app-finish-task'},{'name': 'ListCategoryComponent', 'selector': 'app-list-category'},{'name': 'ListTaskComponent', 'selector': 'app-list-task'},{'name': 'SaveCategoryComponent', 'selector': 'app-save-category'},{'name': 'SaveTaskComponent', 'selector': 'app-save-task'},{'name': 'TutorialComponent', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TutorialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                        src/app/core/services/alerts.ts\n            \n            injectable\n            Alerts\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                        src/app/core/services/categories.ts\n            \n            injectable\n            Categories\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                        src/app/core/services/states.ts\n            \n            injectable\n            States\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/core/services/tasks.ts\n            \n            injectable\n            Tasks\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                        src/app/intranet/connection-db.ts\n            \n            injectable\n            ConnectionDb\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/intranet/connection-sstorage.ts\n            \n            injectable\n            ConnectionSstorage\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/app/intranet/connection.ts\n            \n            injectable\n            Connection\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/categories/list-category/list-category.component.ts\n            \n            component\n            ListCategoryComponent\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/categories/save-category/save-category.component.ts\n            \n            component\n            SaveCategoryComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/tasks/finish-task/finish-task.component.ts\n            \n            component\n            FinishTaskComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/tasks/list-task/list-task.component.ts\n            \n            component\n            ListTaskComponent\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/tasks/save-task/save-task.component.ts\n            \n            component\n            SaveTaskComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                        src/app/shared/pages/tutorial/tutorial.component.ts\n            \n            component\n            TutorialComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.0\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-browser-dynamic : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @awesome-cordova-plugins/core : ^8.1.0\n        \n            @awesome-cordova-plugins/sqlite : ^8.1.0\n        \n            @ionic/angular : ^8.0.0\n        \n            @ionic/cordova-builders : ^12.3.0\n        \n            ionicons : ^7.0.0\n        \n            rxjs : ~7.8.0\n        \n            swiper : ^11.2.10\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nProject details\nFrontend project that allows you to manage simple tasks by storing information in an internal database with SQLite or in local storage.\n\n\n\n\nVersion\n\n\n\n\nAngular\n20.0.0\n\n\nNPM\n11.5.2\n\n\nNode.js\n22.14.0\n\n\nIonic CLI\n5.4.6\n\n\nSQLite\n\n\n\nAndroid Studio\n21.0.4\n\n\nJava JDK\n20\n\n\nGradle\n9.0.0\n\n\n\nImportant note\nThe source code documentation and project structure were generated using the compodoc library, which generates a static web page that can be deployed on a server. In this case, it was deployed on GitHub. Documentation\nCambios Realizados\n\nSe agregó tanto en el componente que lista las tareas y categorías: \n\nUn campo de texto que realiza una búsqueda por la descripción.\nUn componente llamado ion-refresher que permite generar nuevamente el listado de datos cuando se desliza la pantalla hacia abajo estando al principio del scroll. Muchas aplicaciones usan este componente al mostrar un listado de datos.\nUn componente llamado ion-infinite-scroll que permite realizar la paginación del listado, agregando 10   registros mas al listado cuando se desliza hacia lo ultimo del scroll del componente. Muchas aplicaciones usan este componente al mostrar un listado de datos. \nLos componentes ion-action-sheet y ion-item-sliding a los componentes de listado con el objetivo de mostrar opciones que el usuario pueda seleccionar. En este caso fueron Editar y Eliminar para el listado de categorías y Completar y Eliminar para el listado de tareas.\nUn componente llamado ion-fab que permite generar un botón flotante, el cual ejecuta un metodo que se configure para relizar alguna acción, por ejemplo mostrar un listado de acciones (por ejemplo listado de opciones: Categorías, Nueva Tarea) o mostrar un modal (Registrar categoría). Muchas aplicaciones usan este componente al mostrar un listado de datos.\n\n\nSe agregó la verificación del botón atrás del teléfono celular para generar una alerta de confirmación en el componente que lista las tareas, ya que este es la pagina inicial de la aplicación. Si el usuario selecciona el botón Aceptar la aplicación se cierra, sino solo se cierra la ventana de confirmación. Estas alertas se agregaron como un servicio con métodos reutilizables mediante programación orientada a objetos.\n\nEn los modal que registran una tarea y una categoría el botón Guardar se activa si los campos de texto han sido llenados y han seleccionado alguna opción en los listados. Se pudo haber optado por renderizar o no el botón Guardar cumpliendo dichas condiciones pero en este caso solo se desactiva y activa.\n\n\nInstrucciones Generales\n\nDescargar e instalar node.js para ejecutar comandos npm\nInstalar Angular CLI con el siguiente comando npm install -g @angular/cli\nClonar proyecto desde el repositorio en GitHub con el comando git clone https://github.com/dev-shelvin-batista/app-tasks.git o bien puede usar la herramienta visual de GitHub que le permita clonar el proyecto en su equipo.\nDespués de clonar el proyecto acceder a la carpeta con el comando cd app-tasks desde una terminal de comandos.\nInstalar las dependencias de node usa el comando npm install\nEjecutar comando ionic serve para verificar la app en el navegador. Por defecto se usa la url http://localhost:8100/.\n\nConfiguraciones Importantes\nConfiguración de Java JDK\n\nSe debe descargar Java JDK de internet e instalarlo en su equipo.\nVerificar si se agregó la variable de entorno JAVA_HOME después de la instalación. Esto se hace siguiendo las siguientes instrucciones:\nAbrir el explorador de Windows.\nPresionar click derecho en Este Equipo y seleccionar la opción Propiedades.\nEn el listado de la parte derecha seleccionar la opción Configuración avanzada del sistema\nSe abre una ventana con el titulo Propiedades del sistema. En esta ventana se selecciona el botón Variables de entorno de la pestaña Opciones avanzadas\nSe abre otra ventana con las variables de entorno del usuario actual y del sistema.\nVerificar si esta agregada la variableJAVA_HOME\n\n\nSi el instalador no agregó la variable de entorno JAVA_HOME se debe agregar manualmente. Para esto se debe hacer los mismos pasos del punto anterior y en ambas secciones se siguen las siguientes instrucciones:\nSeleccionar el botón Nueva...y se abre una ventana llama Nueva variable de usuario\nSe debe agregar en el campo nombre de la el valor JAVA_HOME y en el campo Valor de la el valor C:\\Program Files\\Java\\jdk-20. El 20 es la versión de JDK usada en la demostración. Se debe reemplazar por la versión en el equipo a verificar.\nSe selecciona el botón Aceptar para guardar los datos.\n\n\n\nConfiguración de Gradle\nEsta herramienta es necesaria para la compilación de la app en Android.\n\nSe debe descargar gradle de internet. Es un archivo comprimido zip. Descargar\nExtraer el archivo comprimido en el disco local C. Se genera una carpeta llamada gradle-9.0.0. Renombrar esta carpeta a Gradle.\nSe debe agregar esta ruta en la variable de entorno llamada Path. Para hacer esto se deben seguir los siguientes pasos.\nAbrir el explorador de Windows.\nPresionar click derecho en Este Equipo y seleccionar la opción Propiedades.\nEn el listado de la parte derecha seleccionar la opción Configuración avanzada del sistema\nSe abre una ventana con el titulo Propiedades del sistema. En esta ventana se selecciona el botón Variables de entorno de la pestaña Opciones avanzadas\nSe abre otra ventana con las variables de entorno del usuario actual y del sistema.\nEn ambos tipos de variables se selecciona la opción Editar, el cual abre una ventana llamada Editar variable de entorno y se agrega al final la ruta de la carpeta que se descomprimió en los pasos anteriores, es decir la ruta C:\\Gradle\\bin.\nSe selecciona el botón Aceptar para guardar los datos. \nSe puede verificar si quedó agregado correctamente ejecutando el comando gradle --version en una terminal de comandos. Se genera un texto con la versión de gradle.\n\n\n\nConfiguración de  Android Studio\nPara instalar y configurar el editor Android Studio se debe seguir los pasos anteriores. Si ya lo ha hecho puede omitirlos.\n\nSe debe descargar el editor Android Studio de internet e instalarlo en su equipo.\n\nVerificar si se agregó la variable de entorno ANDROID_HOME después de la instalación. Esto se hace siguiendo las siguientes instrucciones:\nAbrir el explorador de Windows.\nPresionar click derecho en Este Equipo y seleccionar la opción Propiedades.\nEn el listado de la parte derecha seleccionar la opción Configuración avanzada del sistema\nSe abre una ventana con el titulo Propiedades del sistema. En esta ventana se selecciona el botón Variables de entorno de la pestaña Opciones avanzadas\nSe abre otra ventana con las variables de entorno del usuario actual y del sistema.\nVerificar si esta agregada la variableANDROID_HOME\n\n\n\n\nSi el instalador no agregó la variable de entorno ANDROID_HOME se debe agregar manualmente. Para esto se debe hacer los mismos pasos del punto anterior y en ambas secciones se siguen las siguientes instrucciones:\nSeleccionar el botón Nueva...y se abre una ventana llama Nueva variable de usuario\nSe debe agregar en el campo nombre de la el valor ANDROID_HOME y en el campo Valor de la el valor C:\\Users\\Usuario\\AppData\\Local\\Android\\Sdk. \nSe selecciona el botón Aceptar para guardar los datos.\n\n\nDespués de verificar la variable de entorno, se debe agregar configurar gradle en Android Studio.  Esto se hace siguiendo las siguientes instrucciones:\nSe selecciona la opción File del menú principal y la opción Settings.\nSe abre una ventana de configuración.\nEn la ventana de configuración seleccione la opción Build, Execution, Deployment, Build Tools y Gradle.\nEn esta sección se modifica la ruta en el campo Gradle user home a C:/Gradle.\n\n\n\nInstrucciones para compilar y ejecutar en Android\nNavegador\n\nAcceder a la carpeta con el comando cd app-tasks desde una terminal de comandos.\nEjecutar comando ionic serve para verificar la app en el navegador. Por defecto se usa la url http://localhost:8100/.\nEn el navegador se puede emular como se vería en un teléfono celular pero en este caso no funcionaría la base de datos, ya que esto en un dependencia nativa. Por eso en esta prueba se usa el Local Storage para realizar pruebas desde PC.\n\nCompilación en Android & Ios\n\nAcceder a la carpeta con el comando cd app-tasks desde una terminal de comandos.\nEjecutar el comando ionic cordova build android para Android y ionic cordova build ios\n\nEjecutar app en Android\nPara la ejecución de la app se puede realizar de dos formas: con un emulador o un teléfono celular con el modo desarrollador activo y conectado por el puerto USB. Para esta prueba se usó la segunda opción para realizar una prueba real.\n\nSe debe tener el teléfono celular en modo desarrollador. Para verificar se debe seleccionar la opción Configuración o Ajuste del celular, buscar la opción Acerca de y seleccionar 6 veces la versión o modelo del celular.\nDespués de activar el modo desarrollador, se debe activar la depuración USB en la opción Opciones de desarrollador. La ubicación de esta opción varía dependiendo de la marca y el modelo de celular a usar.\nEn la sección Opciones de desarrollador se deben activar las opciones Depuración USB, instalar vía USB y Depuración USB (ajustes de seguridad)\nVerificar si el teléfono celular conectado por USB se reconoce como dispositivo ejecutando en una terminal de comandos ionic cordova run android --list. Con este comando se generan dos tipos de dispositivos: \nConectados por cable o Wi-fi y Emuladores. Para este caso el teléfono celular debe aparecer en el primer listado.\nSi en el listado anterior solo hay un dispositivo conectado se puede ejecutar el comando ionic cordova run android --device. Pero si hay mas de un dispositivo conectado se ejecuta el comando ionic cordova run android --target=.  es el id generado en el listado del punto anterior. Si se genera un error use la opción --verbose al final del comando para que se muestre de manera detallada toda la ejecución, el error y su causa.\nAl momento de ejecutar el comando anterior se realiza la compilación e instalación en su teléfono celular, evitando así la necesidad de compilar el proyecto, buscar el archivo apk y pasarlo al teléfono celular para instalar la app. En la primera instalación de la app se pedirá autorización de la instalación de la app en su teléfono celular. Se debe seleccionar el botón Aceptar las veces que se muestre esto para la instalación.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_declarations\n\n\n\ncluster_CategoriesModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nListCategoryComponent\n\nListCategoryComponent\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nListCategoryComponent->CategoriesModule\n\n\n\n\n\nSaveCategoryComponent\n\nSaveCategoryComponent\n\nCategoriesModule -->\n\nSaveCategoryComponent->CategoriesModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nCategoriesModule->PagesModule\n\n\n\n\n\nCategoriesRoutingModule\n\nCategoriesRoutingModule\n\nCategoriesModule -->\n\nCategoriesRoutingModule->CategoriesModule\n\n\n\n\n\nTutorialComponent\n\nTutorialComponent\n\nPagesModule -->\n\nTutorialComponent->PagesModule\n\n\n\nSharedModule -->\n\nPagesModule->SharedModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nPagesModule -->\n\nTasksModule->PagesModule\n\n\n\n\n\nFinishTaskComponent\n\nFinishTaskComponent\n\nTasksModule -->\n\nFinishTaskComponent->TasksModule\n\n\n\n\n\nListTaskComponent\n\nListTaskComponent\n\nTasksModule -->\n\nListTaskComponent->TasksModule\n\n\n\n\n\nSaveTaskComponent\n\nSaveTaskComponent\n\nTasksModule -->\n\nSaveTaskComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Shelvin Batista\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
